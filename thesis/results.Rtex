%
%   CHAPTER : SHOW AND EXPLAIN RESULTS
%   
%   Wichtige Punkte : 
%    + verallgemeinerung der müller-matrix über integration
%    + bauteil charakterisierung -> berechnung der Müllermatrix für Fasern
%    + simulation von Tetra, Phenylalanin
%    + Weißlichtspektren
%    + sample spectra
%
\documentclass[a4paper,12pt,twoside,parskip=no,headsepline,open=right,ngerman,export]{scrreprt}

%
%   Include shared preamble
%   Preamble is put into seperate file to be used in files included with \input
%   Made possible with standalone package
%
\input{sup/preamble}


%
%   KNITR
%
<<preamble, echo=F>>=
    # Source external scripts
    # Script containing useful functions, like a custom ggplot style,
    # R libraries and knitr options shared by multiple subfiles 
    source("R/lib.R")
    # Scripts contain code for reading data from files and plot the data
    source("R/fibers.R")
    
    opts_chunk[["set"]](out.width="\\textwidth")
  
    #
    #   MESS WITH KNITR
    #
    
    # Add new chunk option 'subfloat'
    # If subfloat is set TRUE, the first plot generated by the chunk will be put into a \subfloat command without caption
    # If subfloat is a string, the fist plot generated by the chunk will be put into a \subfloat command and the string will be added as caption
    #
    # Save default definition of chunk hook
    chunk.default <- knitr::knit_hooks[["get"]]("chunk")
    # Redefine chunk hook
    knitr::knit_hooks[["set"]](chunk = function(x, options){
        
        # Call the default chunk hook to generate some latex code
        latex <- chunk.default(x, options)
        
        # Mess with the latex code if 'subfloat' option is neither NULL nor FALSE
        if(!is.null(options[["subfloat"]]) & !identical(options[["subfloat"]], FALSE) ) {
            # Define the caption of the subfloat
            # If 'subfloat' is a string, the string will be set as the caption
            if(identical(options[["subfloat"]], TRUE))   caption <- ""
                                                    else caption <- paste0("[", options[["subfloat"]], "]")
            
            # Extract the latex code for including the first plot, that's been gerenerated
            latex <- stringr::str_extract(string=latex, pattern="\\\\includegraphics[^\\}]*\\}")
            # Combine subfloat, includegraphics and caption
            latex <- paste0("\\subfloat", caption, "{", latex, "}")
        }
        
        # Return latex code
        return(latex)
    })  
@

%
%   DOCUMENT
%
\begin{document}
    
    \chapter{Resultate}
    

    \section{Charakterisierung optischer Fasern}\label{sec:results_charakterisierung}
        %
        %   Auswertung der Charakterisierungsexperimente
        %   Welchen Einfluss haben die Wellenplatten, Linearpolarisatoren 
        %   und optische Fasern auf die Polarisation des Lasers?
        %
        %
        %   --------------------------------------------------------------------------------------
        %   + PRODUKTNUMMER BAUTEILE
        %   + BESCHREIBUNG EXPERIMENTE
        %   --------------------------------------------------------------------------------------
        %
        
        Um den Einfluss der Strahlungspolarisation auf Raman- und Weißlichtspektren zu ermitteln, werden Linearpolarisatoren und Wellenplatten eingesetzt, die den Polarisationsgrad und die Ausrichtung der Polarisationsebene der Strahlung beeinflussen. Die verwendeten optischen Fasern haben ebenfalls eine Wirkung auf die Polarisation. Das Ausmaß dieser Wirkung wird bestimmt, sodass sowohl die Qualität und Funktionsfähigkeit der optischen Bauteile geprüft als auch der Effekt der optischen Bauteile von dem Einfluss der Proben auf die Polarisation der Strahlung unterschieden werden kann.
        
        Charakterisiert werden die Linearpolarisatoren mit Polymerfilm \optelem{P1} und \optelem{P2}, der Linearpolarisator mit Nanopartikelbeschichtung \optelem{P3}, die Halbwellenplatten \optelem{W1} und \optelem{W2} sowie die polarisationserhaltene Faser \optelem{F1}, single-mode Faser \optelem{F2} und multi-mode Faser \optelem{F3}. Die Charakterisierung von Linearpolarisatoren und Halbwellenplatten sind im Anhang~\ref{chapter:appendix_characterisation} zu finden.
        
        %
        %   FASER CHARAKTERISIERUNG
        %
            
            %
            %   FIBER F1
            %
            Die Charakterisierung der polarisationserhaltenden optischen Faser~\optelem{F1} erfolgt durch zwei Experimente: Für verschiedene Orientierungen der Polarisationsebene von linear polarisierter Strahlung wird der Stokesvektor vor und hinter \optelem{F1} bestimmt. Zusätzlich wird die Strahlungsleistung vor und hinter der Faser gemessen, um den Transmissionsgrad zu ermitteln.
            
            \begin{figure}[!b]
                %
                %   ÄNDERUNG DES POLARISATIONSGRADES DURCH F1
                %
                \centering
                \subfloat[]{\includegraphics[width=\textwidth]{img/aufbau_faser_stokesvek.pdf}}
                \phantomcaption
            \end{figure}
            \begin{figure}[!t]
                \center
                \ContinuedFloat
                %   Code for reading and plotting data is in R/fibers.R
                <<plot-polarisation-F1, echo=F, fig.height=3, out.width="0.75\\textwidth", subfloat="">>=
                        # COMPARING POLARISATION RATIOS before and after interacting with the fiber
                        plot.polarisation(  data       = F1.stokes, 
                                            statistics = F1.error,
                                            title      = expression(bold("Der Einfluss der Faser F1 auf den Polarisationsgrad "*Pi))   ) +
                                            theme(legend.position = "right")
                @
                \caption[Polarisationsgradänderung durch die Faser \optelem{F1}]{Vergleich des Polarisationsgrades von linear polarisiertem Licht vor und nach Interaktion mit einer polarisationserhaltenen Faser \optelem{F1}. 
                \textit{Versuchsaufbau}: Der Stokesvektor der Strahlung wird mit und ohne die optische Faser (2) bestimmt. Die Polarisationsebene des Lasers wird mit der Halbwellenplatte (1) gedreht, indem (1) um beliebige Winkel $\omega$ gedreht wird. Das Powermeter (4) misst die Leistung $P$ für verschiedene Rotationen des Linearpolarisators (3) um den Winkel $\alpha \in \{\SI{0}{\degree}, \SI{45}{\degree}, \SI{90}{\degree}, \SI{135}{\degree}\}$. Details siehe Anhang~\ref{sec:appendix_method_characterisation} Seite~\pageref{fig:method_stokesFaser}.
                Die gemessenen Leistungen werden mit $P^0$ normiert. Die Stokesparameter werden wie folgt berechnet: $S_0 = P_{\SI{0}{\degree}} + P_{\SI{90}{\degree}}$, $S_1 = P_{\SI{0}{\degree}} - P_{\SI{90}{\degree}}$ und $S_2 = P_{\SI{45}{\degree}} + P_{\SI{135}{\degree}}$. Der Rotationswinkel der Polarisationsebene $\varepsilon$ ist der doppelte Rotationswinkel der Halbwellenplatte $\omega$. Der Polarisationsgrad wird nach $\Pi = \nicefrac{\sqrt{S_1^2 + S_2^2}}{S_0}$ bestimmt. \textit{Auftragung}: Der Polarisationsgrad wird in Abhängigkeit der Ausrichtung der Polarisationsebene dargestellt. Die Messung bei $\varepsilon=0$ wird fünf Mal wiederholt und das dreifache der Standardabweichung als Fehler aller Messungen angenommen.}
                \label{fig:polarisationF1}
            \end{figure}
            
            Anhand der Stokesvektoren lässt sich der Polarisationsgrad $\Pi$ der Strahlung berechnen. Abbildung~\ref{fig:polarisationF1} vergleicht den Polarisationsgrad bevor und nachdem der Laser die Faser \optelem{F1} passiert. Beim Vergleich der Polarisationsgrade wird deutlich, dass \optelem{F1} nur unter bestimmten Bedingungen die Polarisation der Strahlung erhält. Ist die Polarisationsebene der Strahlung entlang der \SI{0}{\degree}- oder \SI{90}{\degree}-Achse ausgerichtet, wird die Polarisation vollständig erhalten. Jeder andere Polarisationszustand wird durch die Faser verändert und der Polarisationsgrad reduziert. Die Strahlung kann dabei bis zu \SI{30}{\percent} ihrer Polarisation verlieren. Abbildung~\ref{fig:polarisationF1} zeigt die Grenzen polarisationserhaltender Fasern auf: Die Faser können nur Strahlung polarisationserhaltend leiten, wenn die Polarisationsebene mit der Ausrichtung der schnellen oder langsamen optischen Achse der Faser übereinstimmt. Fällt die Polarisationsebene der Strahlung nicht mit einer der optischen Faserachsen zusammen, wird die Strahlung in beide Moden der Faser gepumpt. Da die Polarisationsmode entlang der schnellen optischen Achse die elektromagnetische Welle schneller durch die Faser leitet, werden die Phasen der beiden Moden gegeneinander verschoben. Die Größe der Phasenverschiebung ist von der Länge der Faser abhängig und überführt das linear polarisierte Licht in elliptisch polarisierte Strahlung~\cite{ma_characterization_2009}. Da bei der Messung der Stokesvektoren die zirkular polarisierte Komponente vernachlässigt wurde, führt die Änderung der Polarisationsform zur Reduktion des Polarisationsgrades. Im Rahmen dieser Arbeit ist folglich von einem linearen Polarisationsgrad zu sprechen. Deshalb können mit \optelem{F1} keine beliebigen Polarisationszustände zum Messen von Ramanspektren verwendet werden, ohne die linear depolarisierenden Eigenschaften der Faser in Kauf zu nehmen.
            
            \begin{figure}[!b]
                %
                %   ÄNDERUNG DER LASER INTENSITÄT DURCH F1
                %
                \center
                \subfloat[]{\includegraphics[width=0.75\textwidth]{img/aufbau_faser_transmission.pdf}} \\
                %   Code for reading and plotting data is in R/fibers.R
                <<plot-intensity-F1, echo=F, fig.height=3, out.width="0.75\\textwidth", subfloat="">>=
                        # Plot data 
                        plot.intensity.change(  data  = F1.stokes,
                                                title = "Transmissionsverhalten der PM-Faser F1" )
                @
                \caption[Transmissionsverhalten der Faser \optelem{F1}]{Transmissionsverhalten von \optelem{F1} in Abhängigkeit der Polarisation der Strahlung. 
                \textit{Versuchsaufbau}: Die Polarisationsebene des Lasers wird gedreht, indem die Halbwellenplatte (1) um beliebige Winkel $\omega$ rotiert wird. Das Powermeter (3) misst die Leistung $P$ vor und hinter der optischen Faser (2). Details siehe Anhang~\ref{sec:appendix_method_characterisation} Seite~\pageref{fig:method_transmissionFaser}.
                Der Transmissionsgrad wird als Quotient $\nicefrac{P(\omega)}{P^0(\omega)}$ berechnet. Der Rotationswinkel der Polarisationsebene $\varepsilon$ ist der doppelte Rotationswinkel der Halbwellenplatte $\omega$.}
                \label{fig:transmissionF1}
            \end{figure}
            
            Neben der Änderung des Polarisationsgrades weist \optelem{F1} auch ein stark polarisationsabhängiges Transmissionsverhalten auf. Abbildung~\ref{fig:transmissionF1} zeigt den Transmissionsgrad der optischen Faser abhängig von der Ausrichtung der Polarisationsebene einfallender Strahlung. Der Transmissionsgrad beträgt \SIrange{15}{30}{\percent}. Der größte Teil der auftretenden Verlust ist vermutlich auf die unvollständige Einkopplung des Lasers in die Faser zurückzuführen. Das Transmissionsverhalten besitzt die selbe Abhängigkeit vom Polarisationszustand wie die Änderung des Polarisationsgrades in Abbildung~\ref{fig:polarisationF1}. Ist die Polarisationsebene der elektromagnetischen Welle entlang der optischen Faserachsen (\SIlist{0;90;180;270}{\degree}) ausgerichtet, leitet \optelem{F1} die Welle mit dem kleinsten Verlust. Zwischen den optischen Achsen wird die Lichtwelle sehr verlustreich geleitet. Polarisationsabhängige Intensitätsverluste werden für alle optischen Elemente beobachtet und werden als polarization dependent loss (PDL) bezeichnet~\cite{ping_lu_statistical_2001, mecozzi_statistics_2002}. In diesem Fall ist der Effekt aufgrund der Anisotropie der Faser wahrscheinlich stärker als bei anderen optischen Fasern. Es ist zu vermuten, dass die Kopplung zwischen den beiden Polarisationsmoden ineffizient ist und für Polarisationszustände, die zwischen den beiden Moden liegen, höhere Intensitätsverluste durch Rückstreuung beim Einkoppeln der Welle in die Faser, auftreten.
            
            %
            %   FIBER F2 / F3
            %
            Die Charakterisierung der single-mode Faser \optelem{F2} und der multi-mode Faser \optelem{F3} erfolgt anhand von drei Experimenten: Für verschiedene Orientierungen der Polarisationsebene von linear polarisierter Strahlung wird der Stokesvektor vor und hinter den Fasern bestimmt. Die Strahlungsleistung wird vor und hinter den Fasern gemessen, um den Transmissionsgrad zu ermitteln. Zuletzt wird die Lage der Polarisationsebene von linear polarisierter Strahlung vor und nach der Faser gemessen.
            
            \begin{figure}[!b]
                %
                %   Änderung DES POLARISATIONSGRADES DURCH F2 und F3
                %
                \center
                \subfloat[]{\includegraphics[width=\textwidth]{img/aufbau_faser_stokesvek.pdf}}
                \\
            %    \phantomcaption
            %\end{figure}
            %\begin{figure}[!t]
            %    \ContinuedFloat
            %    \center
                %   Code for reading and plotting data is in R/fibers.R
                <<plot-polarisation-F2, echo=F, fig.height=4, subfloat="", out.width="0.49\\textwidth">>=
                        # COMPARING POLARISATION RATIOS before and after interacting with the fiber
                        plot.polarisation(  data       = F2.stokes, 
                                            statistics = F2.error,
                                            title      = expression(bold("Einfluss von F2 auf den Polarisationsgrad "*Pi))   ) +
                            theme(  axis.text = element_text(face="bold", size=16),
                                    text = element_text(size=16) ) + 
                            scale_y_continuous(breaks = seq(from = 0, to = 110, by = 20))
                @
                %   Code for reading and plotting data is in R/fibers.R
                <<plot-polarisation-F3, echo=F, fig.height=4, subfloat="", out.width="0.49\\textwidth">>=
                        # COMPARING POLARISATION RATIOS before and after interacting with the fiber
                        plot.polarisation(  data       = F3.stokes, 
                                            statistics = F3.error,
                                            title      = expression(bold("Einfluss von F3 auf den Polarisationsgrad "*Pi))   ) +
                            theme(  axis.text = element_text(face="bold", size=16),
                                    text = element_text(size=16) ) + 
                            scale_y_continuous(breaks = seq(from = 0, to = 110, by = 20))
                @
                \caption[Polarisationsgradänderung durch \optelem{F2} und \optelem{F3}]{Vergleich des Polarisationsgrades von linear polarisiertem Licht vor und nach Interaktion mit den Fasern \optelem{F2} und \optelem{F3}.
                \textit{Versuchsaufbau}: Der Stokesvektor der Strahlung wird mit und ohne die optische Faser (2) bestimmt. Die Polarisationsebene des Lasers wird mit der Halbwellenplatte (1) gedreht, indem (1) um beliebige Winkel $\omega$ gedreht wird. Das Powermeter (4) misst die Leistung $P$ für verschiedene Rotationen des Linearpolarisators (3) um den Winkel $\alpha \in \{\SI{0}{\degree}, \SI{45}{\degree}, \SI{90}{\degree}, \SI{135}{\degree}\}$.  Details siehe Anhang~\ref{sec:appendix_method_characterisation} Seite~\pageref{fig:method_stokesFaser}.
                Die gemessenen Leistungen werden mit $P^0$ normiert. Die Stokesparameter werden wie folgt berechnet: $S_0 = P_{\SI{0}{\degree}} + P_{\SI{90}{\degree}}$, $S_1 = P_{\SI{0}{\degree}} - P_{\SI{90}{\degree}}$ und $S_2 = P_{\SI{45}{\degree}} + P_{\SI{135}{\degree}}$. Der Rotationswinkel der Polarisationsebene $\varepsilon$ ist der doppelte Rotationswinkel der Halbwellenplatte $\omega$. Der Polarisationsgrad wird nach $\Pi = \nicefrac{\sqrt{S_1^2 + S_2^2}}{S_0}$ bestimmt. 
                \textit{Auftragung}: Der Polarisationsgrad wird in Abhängigkeit der Ausrichtung der Polarisationsebene dargestellt. Die Messung bei $\varepsilon=0$ wird fünf Mal wiederholt und das dreifache der Standardabweichung als Fehler aller Messungen angenommen.}
                \label{fig:results_polarisationF2F3}
            \end{figure}
            
            Anhand der Stokesvektoren lässt sich der Polarisationsgrad $\Pi$ der Strahlung berechnen. Abbildung~\ref{fig:results_polarisationF2F3} vergleicht den Polarisationsgrad bevor und nachdem der Laser \optelem{F2} und \optelem{F3} passiert. Die single-mode Faser \optelem{F2} depolarisiert die Strahlung um \SIrange{0}{50}{\percent}; die multi-mode Faser \optelem{F3} hat mit \SIrange{20}{50}{\percent} noch größere Auswirkungen auf die Lichtpolarisation. Im Vergleich dazu reduziert die polarisationserhaltende Faser \optelem{F1} den Polarisationsgrad um \SIrange{0}{30}{\percent}.
            Der Einfluss von beiden Fasern auf den Polarisationsgrad ist stark von der Lage der Polarisationsebene abhängig. Wegen ihres radialsymmetrischen Aufbaus wurde ein uniformes Depolarisationsverhalten erwartet. Allerdings können auch bei isotropen Fasern wie \optelem{F2} und \optelem{F3} polarization dependent losses auftreten~\cite{ping_lu_statistical_2001, mecozzi_statistics_2002}. In dieser Arbeit muss außerdem berücksichtigt werden, dass die zirkulare Stokeskomponente vernachlässigt wird. Deshalb verringert sich der Polarisationsgrad, wenn linear polarisiertes Licht in zirkular polarisiertes Licht umgewandelt wird. Weil \optelem{F2} aufgrund der experimentellen Bedingungen nicht perfekt isotrop ist, kann sie an Biegungen oder Fehlern der Faser zwei optische Achsen mit unterschiedlichen Brechungsindices besitzen. Fasern werden außerdem an Verbindungsstellen mechanisch beansprucht und können auch dort lokale Anisotropien aufweisen~\cite{pedrotti_optik_2005, ma_characterization_2009}. Diese optischen Achsen können die beiden Polarisationsmoden gegeneinander phasenverschieben, sodass am Ende der Faser elliptisch polarisiertes Licht austritt~\cite{ma_characterization_2009, gil_polarized_2016}. Der Anteil der zirkularen Stokeskomponente wird dabei umso größer je stärker beide Polarisationsmoden gekoppelt sind. Die Modenkopplung kann beim Einkoppeln des Lasers in die Faser stattfinden, wenn die Polarisationsebene der Strahlung nicht mit den optischen Achsen übereinstimmt.
            
            Bei Mehrmodenfasern wie \optelem{F3} hat zusätzlich die Kopplung von Schwingungsmoden einen Einfluss auf die Polarisation der Strahlung. Weil jede Schwingungsmode in einer Mehrmodenfaser unterschiedlich polarisiert ist und die Moden in der Faser miteinander koppeln, kann sich die Polarisation der geleiteten Welle ändern~\cite{ma_characterization_2009, xiong_complete_2018}. Welche Schwingungsmoden beim Einkoppeln in die Faser angeregt werden, hängt von der initialen Polarisation der Strahlung ab~\cite{ma_characterization_2009}. Wird diese verändert, werden auch andere Moden angeregt, welche wiederum anders miteinander koppeln können. Ändern sich die angeregten Schwingungsmoden und deren Vermögen miteinander zu koppeln, verändert sich auch der Einfluss der Faser auf den Polarisationszustand der geleiteten Welle.
            
            Weil die Eigenmoden von Ein- und Mehrmodenfasern im Experiment nicht immer linear polarisiert sind, kann die Polarisation der Lichtwelle beim Anregen von diesen Moden nicht immer erhalten werden.~\cite{xiong_complete_2018, ma_characterization_2009}.
            
            \begin{figure}[!b]
                %
                %   ÄNDERUNG DER LASER INTENSITÄT DURCH F2 und F3
                %
                \center
                \subfloat[]{\includegraphics[width=0.75\textwidth]{img/aufbau_faser_transmission.pdf}} \\
                %   Code for reading and plotting data is in R/fibers.R
                <<plot-intensity-F2, echo=F, fig.height=3.5, subfloat="", out.width="0.49\\textwidth">>=
                        # Plot data 
                        plot.intensity.change(  data  = F2.stokes,
                                                title = "Transmissionsverhalten der SM-Faser F2" ) +
                            theme(  axis.text = element_text(face="bold", size=16),
                                    text = element_text(size=16) )
                @
                %   Code for reading and plotting data is in R/fibers.R
                <<plot-intensity-F3, echo=F, fig.height=3.5, subfloat="", out.width="0.49\\textwidth">>=
                        # Plot data 
                        plot.intensity.change(  data  = F3.stokes,
                                                title = "Transmissionsverhalten der MM-Faser F2" ) +
                            theme(  axis.text = element_text(face="bold", size=16),
                                    text = element_text(size=16) )
                @
                \caption[Transmissionsverhalten der Faser \optelem{F2} und \optelem{F3}]{Transmissionsverhalten von \optelem{F2} und \optelem{F3} in Abhängigkeit der Polarisation der Strahlung.
                \textit{Versuchsaufbau}: Die Polarisationsebene des Lasers wird gedreht, indem die Halbwellenplatte (1) um beliebige Winkel $\omega$ rotiert wird. Das Powermeter (3) misst die Leistung $P$ vor und hinter der optischen Faser (2). Details siehe Anhang~\ref{sec:appendix_method_characterisation} Seite~\pageref{fig:method_transmissionFaser}.
                Der Transmissionsgrad wird als Quotient $\nicefrac{P(\omega)}{P^0(\omega)}$ berechnet. Der Rotationswinkel der Polarisationsebene $\varepsilon$ ist der doppelte Rotationswinkel der Halbwellenplatte $\omega$.}
                \label{fig:transmissionF2F3}
            \end{figure}
            
            Anders als die Depolarisationseigenschaften verhält sich der Transmissionsgrad wie erwartet. Der in Abbildung~\ref{fig:transmissionF2F3} dargestellte Transmissionsgrad ist unabhängig von der Polarisation der Lichtwelle und beträgt für \optelem{F2} \SI{25}{\percent} und für \optelem{F3} \SI{85}{\percent}. Im Vergleich dazu ist das Transmissionsverhalten der polarisationserhaltenden Faser \optelem{F1} stark polarisationsabhängig und nimmt Werte zwischen \SIlist{15;30}{\percent} an. \optelem{F2} und \optelem{F3} bieten damit ein zuverlässigeres Transmissionsverhalten. Obwohl sie den Polarisationsgrad nicht so gut erhalten können wie \optelem{F1}, sind sie für das Messen von Ramanspektren besser geeignet, weil die Laserleistung, welche auf die Probe und den Detektor transferiert werden kann, einen Einfluss auf die Intensität der Ramanbanden hat~\cite{chalmers_raman_2006}. Der Transmissionsgrad der single-mode Faser \optelem{F2} ist deutlich geringer als der von der multi-mode Faser \optelem{F3}. Dies ist auf größere Verluste beim Einkoppeln von Strahlung in die Faser zurückzuführen, die durch den deutlich kleineren Kerndurchmesser und damit kleinere Zahl erlaubter Einstrahlwinkel verursacht werden~\cite{pedrotti_optik_2005}.
            
            \begin{figure}[!b]
                \center
                \subfloat[]{\includegraphics[width=0.75\textwidth]{img/aufbau_faser_rotation.pdf}} \\
                %
                %   PLOT: Wie ändert sich die Orientierung der Polarisationsebene, wenn Licht F2 oder F3 passiert?
                %
                <<plot-rotationF2F3, echo=F, fig.height=3, subfloat="", out.width="0.8\\textwidth">>=
                        # Read data
                        F2.rotation <- read.table(file = "data/F2_rotation.csv", header = T)
                        F3.rotation <- read.table(file = "data/F3_rotation.csv", header = T)
                        
                        # Add group column for facets
                        F2.rotation[["fiber"]] <- "single-mode"
                        F3.rotation[["fiber"]] <- "multi-mode"
  
                        # Shift the data by the initial angle of rotation -> data aligns nicely with line through origin
                        # Combine table for F2 and F3 into single table
                        F2F3.rotation <- lapply(list(F2.rotation, F3.rotation), function(table) {
                            # Remove NA
                            table <- table[!is.na(table[["X"]]),]
                            # Shift data
                            table[["before"]] <- table[["Y2"]] - table[["Y2"]][table[["X"]]==0]
                            # Shift data
                            table[["after"]]  <- table[["Y1"]] - table[["Y1"]][table[["X"]]==0]
                            return(table)
                        }) %>% dplyr::bind_rows(.)
                        
                        # Subset data
                        F2F3.rotation <- F2F3.rotation[0 <= F2F3.rotation[["X"]] & F2F3.rotation[["X"]] <= 180,]
                        
                        # Plot data
                        ggplot( data = F2F3.rotation ) +
                            # Verlauf einer idealen Wellenplatte
                            geom_abline( mapping = aes(intercept = 0, slope = 2, color="c_ideal"),
                                            size = 1 ) +
                            geom_abline( mapping = aes(intercept = 0, slope = -2, color="c_ideal") ,
                                            size = 1) +
                            # Gemessener Verlauf vorher/nachher
                            geom_point( mapping = aes(x = X, y = before, color = "a_vorher") ) +
                            geom_point( mapping = aes(x = X, y = after, color = "b_nachher") ) +
                            # Formatting
                            theme_hot() +
                            theme( strip.text.x = element_text(face="bold", size=12),
                                    axis.title.x  = element_text(face="bold", size=13),
                                    legend.position = "right",
                                    axis.title.y = element_text(face="bold", size=15) ) +
                            scale_color_manual( labels = c("vorher", "nachher", "ideal"), values = scales::hue_pal()(3) ) + 
                            scale_x_continuous(breaks = seq(from=0, to=300, by=45) ) +
                            scale_y_continuous(breaks = seq(from=-360, to=360, by=90) ) +
                            labs(   title = "Faserbedingte Rotation der Polarisationsebene",
                                    y = expression(bold(epsilon*" / °")),
                                    x = expression(bold("Position der Halbwellenplatte "*omega*" / °")),
                                    color = element_blank()
                                ) +
                            facet_wrap(facets = vars(fiber), scales = "free_y")
                @
                \caption[Rotation der Polarisationsebene durch \optelem{F2} und \optelem{F3}]{Rotation der Polarisationsebene einer linear polarisierten elektromagnetischen Welle durch single-mode Faser \optelem{F2} und multi-mode Faser \optelem{F3}.
                \textit{Versuchsaufbau}: Die Halbwellenplatte (1) wird um beliebige Winkel $\omega$ rotiert, um die Polarisationsebene des Lasers zu drehen. Anschließend wird mit Hilfe des Powermeters (4) der Linearpolarisator (3) um einen Winkel $\varepsilon$ rotiert, sodass (3) parallel zur Polarisationsebene der Strahlung steht. Die Messung erfolgt sowohl vor als auch hinter der charakterisierten Faser (2). Die Ausrichtung der Fiberports wird vernachlässigt, indem der Winkel $\varepsilon$ für $\omega=\SI{0}{\degree}$ von allen gemessenen Winkeln $\varepsilon$ subtrahiert wird. Details siehe Anhang~\ref{sec:appendix_method_characterisation} Seite~\pageref{fig:method_rotationFaser}.
                \textit{Auftragung}: Aufgetragen ist die Rotation der Polarisationsebene von linear polarisiertem Licht um den Winkel $\varepsilon$ in Abhängigkeit der Orientierung der Halbwellenplatte $\omega$. Es werden drei Fälle betrachtet: Die Welle interagiert mit der Faser und \optelem{W1} (nachher), die Welle wechselwirkt nur mit \optelem{W1} (vorher) und die Welle wechselwirkt mit einer idealen Wellenplatte (ideal).}
                \label{fig:results_rotationF2F3}
            \end{figure}
            
            Der Polarisationsgrad alleine ist nicht ausreichend um den Einfluss der optischen Fasern auf den Polarisationszustand der Lichtwelle zu beschreiben. Abbildung~\ref{fig:results_rotationF2F3} zeigt daher wie die Lage der Polarisationsebene von linear polarisierter Strahlung durch \optelem{F2} und \optelem{F3} verändert wird. Beide Fasern haben einen Einfluss auf die Lage der Polarisationebene einfallender Strahlung. \optelem{F2} wirkt sich dabei am stärksten aus. Die Einmodenfaser \optelem{F2} scheint die Polarisationseben entlang der \SI{0}{\degree}-Achse zu spiegeln und führt eine nicht-lineare, periodische Abhängigkeit der Polarisationsebenenrotation $\varepsilon$ von der Position der Wellenplatte $\omega$ ein. Die Ursache der Spiegelung entlang der \SI{0}{\degree}-Achse ist unklar. Bei der Mehrmodenfaser ist ein ähnlicher nicht-linearer, periodischer Zusammenhang zu beobachten. Wie zu Abbildung~\ref{fig:results_polarisationF2F3} über den Polarisationsgrad erklärt wurde, kann im Experiment keine radialsymmetrischen Faser angenommen werden. Mechanischer Stress durch Krümmen oder Drehen der Faser stören die Isotropie des Faserkerns~\cite{ma_characterization_2009}. Ist der Stress über das Experiment konstant, wird der Polarisationszustand systematisch beeinflusst.
            
            %
            %   FASERN IM MÜELLERFORMALISMUS
            %
            In den folgenden Abschnitten~\ref{sec:results_detektorAnisotropie} und~\ref{sec:results_ramanspektren} sollen die am WiTec durchgeführten Experimente mit Simulationen verglichen werden. Dafür bedarf es einer mathematischen Beschreibung von \optelem{F1} im Müllerformalismus. Um die optischen Fasern als Müllermatrix $\mx{M}$ darstellen zu können, werden mit den Stokesvektoren, die vor der Faser, $\vc{S}^{\varepsilon}$ und den Stokesvektoren, die hinter der Faser, $\vc{T}^{\varepsilon}$ ermittelt worden sind, Gleichungssysteme nach Gleichung~\ref{eq:results_ansatzFaserMatrix} formuliert. 
            \begin{align}
                \nonumber
                T^{\varepsilon}_0 &= m_{00} S^{\varepsilon}_0 + m_{01} S^{\varepsilon}_1 + m_{02} S^{\varepsilon}_2 \\
                T^{\varepsilon}_1 &= m_{10} S^{\varepsilon}_0 + m_{11} S^{\varepsilon}_1 + m_{12} S^{\varepsilon}_2 \label{eq:results_ansatzFaserMatrix} \\
                \nonumber
                T^{\varepsilon}_2 &= m_{20} S^{\varepsilon}_0 + m_{21} S^{\varepsilon}_1 + m_{22} S^{\varepsilon}_2
            \end{align}
            Um das Transmissionsverhalten der Faser beschreiben zu können, sind alle Stokesvektoren $\vc{S}^{\varepsilon}$ und $\vc{T}^{\varepsilon}$ auf den ersten Stokesparameter der initialen Polarisation $S_0^{\varepsilon}$ normiert. Die vierte Stokeskomponente $S_3^{\varepsilon}$ und $T_3^{\varepsilon}$ werden vernachlässigt. Der Winkel $\varepsilon$ beschreibt die Ausrichtung der Polarisationsebene der Lichtwelle bevor sie mit der Faser wechselwirkt. Für jeden dieser Polarisationswinkel $\varepsilon$ lässt sich ein Gleichungssystem nach Gleichung~\ref{eq:results_ansatzFaserMatrix} formulieren und damit die Elemente der Müllermatrix 
            \begin{equation*}
                \mx{M} =    \begin{pmatrix}
                                m_{00} & m_{01} & m_{02} & 0 \\
                                m_{10} & m_{11} & m_{12} & 0 \\
                                m_{20} & m_{21} & m_{22} & 0 \\
                                0      & 0      & 0      & 0
                            \end{pmatrix}   
            \end{equation*}
            berechnen. Für die $i$-te der drei betrachteten Komponenten des Stokesvektors $\vc{T}^{\varepsilon}$ ergibt sich daher ein $\varepsilon \times 3$-Gleichungssystem, welches mittels der Funktion \texttt{Solve} des R-Pakets \texttt{limSolve} die Müllermatrixelemente $m_{i0}$, $m_{i1}$ und $m_{i2}$ liefert~\cite{soetaert_limsolve_2009}. 
            
            Um sicher zu stellen, dass der Müllerformalismus in der Lage ist die Fasern korrekt zu beschreiben, wird die oben beschriebene Müllermatrix $\mx{M}$ auf den initialen Stokesvektor $\vc{S}^{\varepsilon}$ angewendet und mit dem finalen Stokesvektor $\vc{T}^{\varepsilon}$ verglichen. Abbildung~\ref{fig:results_muellerF1F2F3} zeigt den gemessenen und prognostizierten Verlauf der Stokesparameter und Polarisationsgrades $\Pi = \nicefrac{\sqrt{S_1^2 + S_2^2}}{S_0}$ in Abhängigkeit des anfänglichen Polarisationszustandes. 

            \begin{figure}[!p]
                \center
                %   Code for reading and plotting data is in R/fibers.R
                <<plot-predictF1, echo=F, warning=F, fig.height=3.2, subfloat=T>>=
                        # Plot data
                        plot.stokesPredict(data = F1.stokes, title = "Validierung der Müllermatrix von F1") +
                            theme(legend.position = "none")
                @
                \\                
                %   Code for reading and plotting data is in R/fibers.R
                <<plot-predictF2, echo=F, warning=F, fig.height=3.2, subfloat=T>>=
                        # Plot data
                        plot.stokesPredict(data = F2.stokes, title = "Validierung der Müllermatrix von F2") +
                            theme(legend.position = "none")
                @
                \\ \setcounter{subfigure}{0}
                %   Code for reading and plotting data is in R/fibers.R
                <<plot-predictF3, echo=F, warning=F, fig.height=3.6, subfloat="Anhand der experimentellen Stokesvektoren wird nach Gleichung~\\ref{eq:results_ansatzFaserMatrix} die Müllermatrizen der Fasern \\optelem{F2} und \\optelem{F3} berechnet. Die Vorhersage des experimentellen Stokesvektors hinter der Faser $\\vc{T}^{\\varepsilon}$ erfolgt durch Anwenden der Matrix auf die experimentellen Stokesvektoren vor der Faser $\\vc{S}^{\\varepsilon}$. Der Polarisationsgrad wird nach $\\Pi = \\nicefrac{\\sqrt{S_1^2 + S_2^2}}{S_0}$ bestimmt. \\label{subfig:results_muellerF1F2F3_plots}">>=
                        # Plot data
                        plot.stokesPredict(data = F3.stokes, title = "Validierung der Müllermatrix von F3")
                @
                \phantomcaption
            \end{figure}
            \begin{figure}[!t]
                %
                %   PLOT: Result Mueller matrix fibre F1
                %
                \ContinuedFloat
                \center
                \subfloat[Versuchsaufbau: Der Stokesvektor der Strahlung wird mit und ohne die optische Faser (2) bestimmt. Die Polarisationsebene des Lasers wird mit der Halbwellenplatte (1) gedreht, indem (1) um beliebige Winkel $\omega$ gedreht wird. Das Powermeter (4) misst die Leistung $P$ für verschiedene Rotationen des Linearpolarisators (3) um den Winkel $\alpha \in \{\SI{0}{\degree}, \SI{45}{\degree}, \SI{90}{\degree}, \SI{135}{\degree}\}$. Details siehe Anhang~\ref{sec:appendix_method_characterisation} Seite~\pageref{fig:method_stokesFaser}.
                Die gemessenen Leistungen werden mit $P^0$ normiert. Die Stokesparameter werden wie folgt berechnet: $S_0 = P_{\SI{0}{\degree}} + P_{\SI{90}{\degree}}$, $S_1 = P_{\SI{0}{\degree}} - P_{\SI{90}{\degree}}$ und $S_2 = P_{\SI{45}{\degree}} + P_{\SI{135}{\degree}}$.]{\includegraphics[width=\textwidth]{img/aufbau_faser_stokesvek.pdf}}
                \caption[Optische Fasern im Müllerformalismus]{Validierung der mathematischen Beschreibung von \optelem{F1}, \optelem{F2} und \optelem{F3} als Müllermatrix.}
                \label{fig:results_muellerF1F2F3}
            \end{figure}
            
            Aus Abbildung~\ref{fig:results_muellerF1F2F3} wird ersichtlich, dass der Müllerformalismus nicht in der Lage ist den Einfluss von \optelem{F1} auf die Polarisation der Lichtwelle korrekt wieder zu geben. Der zweite Stokesparameter, welcher die Polarisation entlang der \SI{0}{\degree}- und \SI{90}{\degree}-Achse beschreibt, ist als einziger Aspekt richtig prognostiziert. Für den ersten und dritten Stokesparameter scheinen nicht-lineare Effekte eine zusätzlichen Einfluss zunehmen, welcher durch die Müllermatrix als linearer Operator nicht darstellbar ist. Da der Polarisationsgrad von den Stokesparametern abhängt, ist dementsprechend auch der Polarisationsgrad falsch beschrieben.
            
            Weil die polarisationserhaltende Faser \optelem{F1} im Experiment einen begrenzten Anwendungsbereich besitzt und im Müllerformalismus nicht beschreibbar ist, wird \optelem{F1} nicht für die Messung der polarisationsabhängigen Ramanspektren eingesetzt.
            
            Die Einmodenfaser \optelem{F2} lässt sich besser als \optelem{F1} im Müllerformalsimus beschreiben. Obwohl der zweite und dritte Stokesparameter gut dargestellt werden und der erste Stokesparameter nur geringfügig vom Experiment abweicht, verstärken sich die Fehler in einer Weise, dass nur der grobe Verlauf des Polarisationsgrades von der Müllermatrix wieder gegeben wird. Die Abweichungen vom Experiment sind zu groß, um sie für Simulationen zu verwenden. Der Vergleich von \optelem{F1} und \optelem{F2} zeigt eine mögliche Ursache der nicht-linearen Effekte auf. Eine polarisationserhaltende Faser ist ähnlich einer Einmodenfaser aufgebaut. Der Unterschied zur Einmodenfaser ist eine gezielte Belastung des Faserkerns, um die Isotropie aufzuheben und eine schnelle und eine langsame optische Achse einzuführen~\cite{ma_characterization_2009}. Abbildung~\ref{subfig:results_muellerF1F2F3_plots} zeigt für \optelem{F1} deutlich, dass der lineare Müllerformalismus wegen der anisotropen Faser nicht in der Lage ist den dritten Stokesparameter zu beschreiben. Die dritte Stokeskomponente ist hier der relevante Parameter, weil er die Polarisation zwischen den optischen Achsen beschreibt. Die Einmodenfaser wird zwischen den optischen Achsen durch den dritten Stokesparameter genauso gut beschrieben wie auf den optischen Achsen durch den zweiten Stokesparameter. Die erste Stokeskomponente, welches die Intensität der Faser beschreibt, wird von allen Stokesparametern am ungenausten beschrieben.
            
            Weil der Polarisationsgrad auch nicht für die Einmodenfaser \optelem{F2} ausreichend beschrieben wird, kann ihre Müllermatrix nicht eingesetzt werden. Da es sich bei \optelem{F2} um eine Anregungsfaser handelt wird dieses Problem bei der Messung von Ramanspektren umgangen, indem Ramanspektren nur für bereits charakterisierte Polarisationszustände gemessen werden. Dabei wird angenommen, dass das Mikroskop des Ramanspektrometers einen vernachlässigbaren Einfluss auf den Polarisationszustand des Lasers nimmt.
            
            Die Mehrmodenfaser \optelem{F3} wird, wie Abbildung~\ref{fig:results_muellerF1F2F3} zeigt, gut durch den Müllerformalismus dargestellt. Nicht-lineare Effekte sind vernachlässigbar und alle Stokesparameter sowie der Polarisationsgrad können durch die Müllermatrix
            % PRINT MUELLER MATRIX OF F3
            \begin{equation}
                \mx{F} \approx \begin{pmatrix*}[r] 
                <<print-muellermatrix-F3, echo=F, results="asis">>=
                    # Read mueller matrix from file
                    F3.muellermatrix <- read.table(file="data/F3_muellermatrix.csv", header=F)
                    
                    # Round matrix
                    F3.muellermatrix <- round(F3.muellermatrix, 3)
                    
                    # Print matrix elements
                    apply(F3.muellermatrix, 1, function(row) { 
                        paste(row, collapse = " & ") 
                    }) %>% paste(., collapse = " \\\\ ") %>% cat
                @
                \end{pmatrix*}\label{eq:results_F3_muellermatrix}
            \end{equation}
            akkurat prognostiziert werden. Der Vergleich mit den anderen Fasern zeigt, dass Mehrmodenfasern deutlich weniger anfällig gegenüber Faserkrümmung sind. Wegen des bedeutend kleineren Kerndurchmessers von Einmoden- und polarisationserhaltenden Fasern leiten diese Fasern Lichtwellen zum größeren Teil als evaneszentes Feld~\cite{pedrotti_optik_2005}. Wird die Welle verstärkt im Fasermantel geleitet, ist sie auch anfälliger für die Auswirkungen von mechanischen Stress und Mikrodefekte~\cite{pedrotti_optik_2005}. Multi-mode Fasern wie \optelem{F3} lassen sich folglich im Gegensatz zu den anderen beiden Fasertypen als linearer Mülleroperator beschreiben, weil ihr größerer Faserkernquerschnitt sie unempfindlicher gegenüber mechanischem Stress, wie dem Krümmen der Faser, macht.
        
        % newpage, weil nächster Abschnitt erst auf nächste Seite passt
        \newpage
    
    \section{Ramanstreuung von partiell polarisierter Strahlung im Müllerformalismus}\label{sec:results_verallgemeinerung_ramanMueller}
        %
        %   Verallgemeinerung der Herleitung der Raman-Müllermatrix aus dem Projektbericht
        %
    
        In dem folgenden Abschnitt~\ref{sec:results_detektorAnisotropie} soll der Einfluss der Polarisation des Anregungslasers auf Schwingungsramanspektren betrachtet werden. Hierfür sollen experimentelle Ramanspektren mit Simulationen im Müllerformalismus verglichen werden. In einer vorherigen Arbeit wurde das entsprechende Simulationsprogramm \texttt{PolaRam} entwickelt und die Form des Schwingungsramantensors $\mx{\alpha}$ im Müllerformalismus hergeleitet~\cite{eichhorn_beschreibung_2020}. Die Müllermatrix $\mx{M_{\alpha}}$ des Ramantensors $\mx{\alpha}$ beschreibt, wie der inelastische Streuprozess an einer Schwingungsmode eines Moleküls die Polarisation der Strahlung beeinflusst. Für die Herleitung der Raman-Müllermatrix $\mx{M_{\alpha}}$ wurden die Annahmen getroffen, dass die anregende Strahlung linear polarisiert ist und einen Polarisationsgrad $\Pi=1$ besitzt, also vollständig polarisiert ist.
        
        Die Charakterisierung der optischen Bauteile in Abschnitt~\ref{sec:results_charakterisierung} hat veranschaulicht, dass die Annahme, vollständig polarisiertes Licht wechselwirkt mit dem Probenmolekül, im Experiment nicht gegeben ist. Besonders die optischen Fasern weisen depolarisierende Eigenschaften auf. Um das Experiment trotzdem im Müllerformalismus simulieren zu können, wird der Stokesvektor $\vc{S}$, der die Polarisation des anregenden Lasers beschreibt, in eine Linearkombination aus einem vollständig polarisierten Stokesvektor $\vc{P}$ und einem vollständig unpolarisierten Stokesvektor $\vc{U}$ zerlegt. Es wird angenommen, dass die Strahlung linear polarisiert ist und damit $S_3 = 0$ gilt. Für bessere Leserlichkeit wird der Stokesvektor $\vc{S}$ auf den ersten Stokesparameter $S_0$ normiert. Die Definition des Stokesvektors $\vc{S}$ und seines Polarisationsgrades $\Pi$ vereinfachen sich damit wie folgt:
        \begin{equation}
            \vc{S} =   \begin{pmatrix}
                            S_0 \\
                            S_1 \\
                            S_2 \\
                            S_3 \\
                        \end{pmatrix}
                    \coloneqq \begin{pmatrix}
                            1   \\
                            S_1 \\
                            S_2 \\
                            0   \\
                        \end{pmatrix}  \quad,\quad
            \Pi     = \frac{ \sqrt{S_1^2 + S_2^2 + S_3^2} }{S_0} 
                    =  \sqrt{S_1^2 + S_2^2} \quad . \label{eq:results_annahmen}
        \end{equation}
        Ein beliebig polarisierter Stokesvektor wird in eine Summe aus einem total polarisierten und einem vollständig unpolarisierten Stokesvektor zerlegt.
        \begin{equation}
            \vc{S}  =  \vc{P} + \vc{U} 
		            =   \begin{pmatrix}
		                    \Pi \\ 
		                    S_1 \\ 
		                    S_2 \\ 
		                    0
		                \end{pmatrix} + (1-\Pi) \begin{pmatrix}
		                                            1 \\ 
		                                            0 \\ 
		                                            0 \\ 
		                                            0
		                                        \end{pmatrix}
		               \label{eq:results_stokesZerlegung}
        \end{equation}
        \begin{figure}[!b]
	    	\center
	    	\includegraphics[width=0.5\textwidth]{img/stokesVector_Polar.png}	
	    	\caption[Polare Stokesparameter]{Polare Darstellung von vollständig linear polarisierten Stokesvektoren.}
	    	\label{pic:results_polarStokes}
	    \end{figure}
        Durch diese Zerlegung lässt sich die Raman-Müllermatrix $\mx{M_{\alpha}}$ auf den Summanden $\vc{P}$ anwenden. Der zweite Summand $\vc{U}$ repräsentiert den unpolarisierten Anteil der Strahlung; die Herleitung der Raman-Müllermatrix versagt. Um dieses Problem zu umgehen, wird unpolarisierte Strahlung als Überlagerung von allen möglichen, vollständig linear polarisierten Zuständen betrachtet. Jeder dieser Zustände wird durch einen Stokesvektor $\vc{Q}(\sigma)$ beschrieben und einzeln auf die Raman-Müllermatrix $\mx{M_{\alpha}}$ angewendet. Am Ende wird über alle gestreuten Vektoren gemittelt, um den gestreuten Vektor des unpolarisierten Lichts zu berechnen. Der Vektor $\vc{Q}(\sigma)$ liefert jeden möglichen total linear polarisierten Stokesvektor (Abb.~\ref{pic:results_polarStokes}). Der Winkel $\sigma$ ist die Winkelkomponente der polaren Darstellung von Stokesvektoren (Abb.~\ref{pic:results_polarStokes}).
	    \begin{align}
	        \vc{Q}(\sigma) &=  \begin{pmatrix} 
	                                1 \\ 
	                                \cos(\sigma) \\ 
	                                \sin(\sigma) \\ 
	                                0 
	                           \end{pmatrix}
	                           \label{eq:results_QofSigma}
		    \intertext{Mit $\nicefrac{\int_a^b f(x) dx}{b-a}$ als Mittelwert einer Funktion im Interval $[a;b]$ wird die Anwendung der Matrix $\mx{M_{\alpha}}$ auf den Vektor $\vc{U}$ als Integral über alle möglichen Winkel $\sigma$ formuliert.}
		    \nonumber
		    \mx{M_{\alpha}}\vc{U} &=    \frac{1-\Pi}{2\pi - 0} \int_0^{2\pi} \mx{M_{\alpha}}\vc{Q}(\sigma) \,d\sigma \\
		    \mx{M_{\alpha}}\vc{U} &=    \frac{1-\Pi}{2\pi} \int_0^{2\pi}     \mx{M_{\alpha}}\vc{Q}(\sigma) \,d\sigma
		                                \label{eq:results_integralDefinition}
	        \intertext{Allgemein besitzt die Raman-Müllermatrix die Form}
	        \mx{M_{\alpha}} &=  \begin{pmatrix} 
					        	    m_{11} & m_{12}   & m_{13}   & m_{14}   \\
						            m_{21} & m_{22}   & m_{23}   & m_{24}   \\
						            m_{31} & m_{32}   & m_{33}   & m_{34}   \\
						            m_{41} & m_{42}   & m_{43}   & m_{44} 	
					            \end{pmatrix}
                                \label{eq:results_muellermatrix} \qquad .
	        \intertext{$\mx{M_{\alpha}}$ (Gl.~\ref{eq:results_muellermatrix}) und $\vc{Q}(\sigma)$ (Gl.~\ref{eq:results_QofSigma}) werden in Gleichung~\ref{eq:results_integralDefinition} eingesetzt.}
	        \nonumber
	        \mx{M_{\alpha}}\vc{U} &=  \frac{1-\Pi}{2\pi} \int_0^{2\pi} \mx{M_{\alpha}}\vc{Q}(\sigma) \,d\sigma
	    \end{align}
	    \begin{align}
	        \mx{M_{\alpha}}\vc{U} &=  \frac{1-\Pi}{2\pi} \flexibleint_0^{2\pi}{ 
								        \begin{pmatrix} 
									        m_{11} & m_{12}   & m_{13}   & m_{14}   \\
									        m_{21} & m_{22}   & m_{23}   & m_{24}   \\
									        m_{31} & m_{32}   & m_{33}   & m_{34}   \\
									        m_{41} & m_{42}   & m_{43}   & m_{44} 	
								        \end{pmatrix}
								        \begin{pmatrix} 1 \\ \cos(\sigma) \\ \sin(\sigma) \\ 0 \end{pmatrix}
								      } \,d\sigma \\
		    \nonumber
		    \mx{M_{\alpha}}\vc{U} &=  \\
		    \nonumber
		                       &  \frac{1-\Pi}{2\pi} \cdot
		                          \flexibleint_0^{2\pi}{
								            \begin{pmatrix} 
									            m_{11} \cdot 1 + m_{12} \cdot\cos(\sigma) + m_{13} \cdot\sin(\sigma)  + m_{14} \cdot 0 \\
									            m_{21} \cdot 1 + m_{22} \cdot\cos(\sigma) + m_{23} \cdot\sin(\sigma)  + m_{24} \cdot 0 \\
									            m_{31} \cdot 1 + m_{32} \cdot\cos(\sigma) + m_{33} \cdot\sin(\sigma)  + m_{34} \cdot 0 \\
									            m_{41} \cdot 1 + m_{42} \cdot\cos(\sigma) + m_{43} \cdot\sin(\sigma)  + m_{44} \cdot 0	
								            \end{pmatrix}
								        } \,d\sigma
	    	\intertext{Das Integral wird für jede Komponente gelöst.}
	    	\nonumber
	    	\mx{M_{\alpha}}\vc{U} &=    \frac{1-\Pi}{2\pi} 
			        					\begin{pmatrix} 
									        \int_0^{2\pi}   m_{11} \cdot 1            + 
									  		                m_{12} \cdot\cos(\sigma)  + 
									  		        		m_{13} \cdot\sin(\sigma)  + 
									  				        m_{14} \cdot 0			  \,d\sigma \\
									        \int_0^{2\pi}   m_{21} \cdot 1           + 
									  		        		m_{22} \cdot\cos(\sigma) + 
									  		        		m_{23} \cdot\sin(\sigma) +
									  				        m_{24} \cdot 0           \,d\sigma \\
								            \int_0^{2\pi}   m_{31} \cdot 1 			 + 
									  				        m_{32} \cdot\cos(\sigma) + 
									  				        m_{33} \cdot\sin(\sigma) + 
									  				        m_{34} \cdot 0           \,d\sigma \\
									        \int_0^{2\pi}   m_{41} \cdot 1 +
									  				        m_{42} \cdot\cos(\sigma) +
									  				        m_{43} \cdot\sin(\sigma) + 
									  				        m_{44} \cdot 0           \,d\sigma	
								        \end{pmatrix}
		    \intertext{Da die Müllermatrix $\mx{M_{\alpha}}$ unabhängig von $\sigma$ ist, lassen sich ihre Elemente vor die Integrale ziehen. Summanden werden zuerst integriert und danach addiert.}
		    \nonumber
		    \mx{M_{\alpha}}\vc{U} &=  \\
		    \nonumber  
		                           \frac{1-\Pi}{2\pi}
		    					  &\cdot\begin{pmatrix} 
									        m_{11} \int_0^{2\pi} 1            \,d\sigma + 
									        m_{12} \int_0^{2\pi} \cos(\sigma) \,d\sigma + 
									        m_{13} \int_0^{2\pi} \sin(\sigma) \,d\sigma + 
									        m_{14} \int_0^{2\pi}  0			  \,d\sigma \\
									        m_{21} \int_0^{2\pi} 1            \,d\sigma + 
									        m_{22} \int_0^{2\pi} \cos(\sigma) \,d\sigma + 
									        m_{23} \int_0^{2\pi} \sin(\sigma) \,d\sigma + 
									        m_{24} \int_0^{2\pi}  0			  \,d\sigma \\
									        m_{31} \int_0^{2\pi} 1            \,d\sigma + 
									        m_{32} \int_0^{2\pi} \cos(\sigma) \,d\sigma + 
									        m_{33} \int_0^{2\pi} \sin(\sigma) \,d\sigma + 
									        m_{34} \int_0^{2\pi}  0			  \,d\sigma \\
									        m_{41} \int_0^{2\pi} 1            \,d\sigma + 
									        m_{42} \int_0^{2\pi} \cos(\sigma) \,d\sigma + 
									        m_{43} \int_0^{2\pi} \sin(\sigma) \,d\sigma + 
									        m_{44} \int_0^{2\pi}  0			  \,d\sigma	
								        \end{pmatrix}
		\end{align}
		Mit $\int_0^{2\pi} 1 \,dx = 2\pi$ und $\int_0^{2\pi} \cos(x) \,dx = \int_0^{2\pi} \sin(x) \,dx = \int_0^{2\pi} 0 \,dx = 0$~\cite{bronstein_taschenbuch_2000}.
	    \begin{align}
		    \nonumber
		    \mx{M_{\alpha}}\vc{U} &=    \frac{1-\Pi}{2\pi} 
								        \begin{pmatrix} 
									        2\pi \cdot m_{11} + 
									        0 \cdot m_{12}    + 
									        0 \cdot m_{13}    + 
									        0 \cdot m_{14}    \\ 
									        2\pi \cdot m_{21} + 
									        0 \cdot m_{22}    + 
									        0 \cdot m_{23}    + 
									        0 \cdot m_{24}    \\ 
									        2\pi \cdot m_{31} + 
									        0 \cdot m_{32}    + 
									        0 \cdot m_{33}    + 
									        0 \cdot m_{34}    \\ 
									        2\pi \cdot m_{41} + 
									        0 \cdot m_{42}    + 
									        0 \cdot m_{43}    + 
									        0 \cdot m_{44}	
								        \end{pmatrix} \\
			\nonumber
			\mx{M_{\alpha}}\vc{U} &=    \frac{1-\Pi}{2\pi} 
								        \begin{pmatrix} 
									        2\pi \cdot m_{11} \\ 
									        2\pi \cdot m_{21} \\  
									        2\pi \cdot m_{31} \\ 
									        2\pi \cdot m_{41} 
								        \end{pmatrix} \\
			\nonumber
		    \mx{M_{\alpha}}\vc{U} &=    (1-\Pi) 
								        \begin{pmatrix}
									        m_{11} \\ 
									        m_{21} \\  
									        m_{31} \\ 
									        m_{41} 
								        \end{pmatrix}
							       =    (1-\Pi) \cdot \mx{M_{\alpha}}
								        \begin{pmatrix}
									        1 \\ 
									        0 \\  
									        0 \\ 
									        0 
								        \end{pmatrix}
		    \intertext{Der Mittelwert über alle linear polarisierten Vektoren ist demnach}
		    \mx{M_{\alpha}}\vc{U} &=    \frac{1-\Pi}{2\pi} \int_0^{2\pi} \mx{M_{\alpha}}\vc{Q}(\sigma)\,d\sigma
		                           =    (1-\Pi)\cdot\mx{M_{\alpha}}
		                                \begin{pmatrix} 
		                                    1 \\ 
		                                    0 \\ 
		                                    0 \\ 
		                                    0 
		                                \end{pmatrix} \qquad .
		                                \label{eq:results_IntegrationResult}
	    \end{align}
	    Das Anwenden der Raman-Müller-Matrix $\mx{M_{\alpha}}$ auf den unpolarisierten Teil des Stokesvektors liefert für eine beliebige Raman-Müllermatrix das selbe Ergebnis wie das Integral über alle $\mx{M_{\alpha}}\vc{Q}(\sigma)$.
	    
	    Folglich muss das auch für das Anwenden der Raman-Müllermatrix auf den Stokesvektor $\vc{S}$ der Fall sein. das Anwenden von $\mx{M_{\alpha}}$ auf Gleichung~\ref{eq:results_stokesZerlegung} vereinfacht sich damit wie folgt:
	    \begin{align}
	        \nonumber
		    \mx{M_{\alpha}}\vc{S} &=    \mx{M_{\alpha}}(\vc{P} + \vc{U}) \\
	        \nonumber
		    \mx{M_{\alpha}}\vc{S} &=    \mx{M_{\alpha}}\vc{P} + \mx{M_{\alpha}}\vc{U} \qquad .
		    \intertext{Mit Gleichung~\ref{eq:results_IntegrationResult}.}
		    \nonumber
		    \mx{M_{\alpha}}\vc{S} &=    \mx{M_{\alpha}}\vc{P} + (1-\Pi)\cdot\mx{M_{\alpha}} 
		                                \begin{pmatrix} 
		                                    1 \\ 
		                                    0 \\ 
		                                    0 \\ 
		                                    0 
		                                \end{pmatrix}
		 \end{align}
		 \begin{align}
		    \nonumber
		    \mx{M_{\alpha}}\vc{S}  &=   \mx{M_{\alpha}} \left[ \vc{P} + (1-\Pi) 
		                                \begin{pmatrix} 
		                                    1 \\ 
		                                    0 \\ 
		                                    0 \\ 
		                                    0 
		                                \end{pmatrix} \right]
	        \intertext{Mit Gleichung~\ref{eq:results_stokesZerlegung}.}
		    \nonumber
		    \mx{M_{\alpha}}\vc{S} &=    \mx{M_{\alpha}} \left[ 
		                                \begin{pmatrix} 
		                                    \Pi \\ 
		                                    S_1 \\ 
		                                    S_2 \\ 
		                                    0 
		                                \end{pmatrix} 
		                              + \begin{pmatrix} 
		                                    1-\Pi \\ 
		                                    0 \\ 
		                                    0 \\ 
		                                    0 
		                                \end{pmatrix} \right]
		  \end{align}
		  \begin{align}
		    \nonumber
		    \mx{M_{\alpha}}\vc{S} &=    \mx{M_{\alpha}} 
		                                \begin{pmatrix} 
		                                    1 \\ 
		                                    S_1 \\ 
		                                    S_2 \\ 
		                                    0 
		                                \end{pmatrix}
		    \intertext{Mit den Annahmen aus Gleichung~\ref{eq:results_annahmen} resultiert}
			\mx{M_{\alpha}}\vc{S} &=    \mx{M_{\alpha}} 
						                \begin{pmatrix} 
						                    S_0 \\ 
						                    S_1 \\ 
						                    S_2 \\ 
						                    S_3 
						                \end{pmatrix} \qquad .
	    \end{align}
    	Folglich können die Raman-Müllermatrizen, welche durch in einer früheren Arbeit hergeleitete Transformation entstanden sind, auch auf partiell polarisierte Stokesvektoren anwendet werden. In Abschnitt~\ref{sec:results_detektorAnisotropie} kann demnach \texttt{PolaRam} eingesetzt werden, um die Experimente zu simulieren~\cite{eichhorn_polaram_2020}.
	
	    
	    \subsection*{Illustration der Methode}\label{subsec:results_polaram}
	    %
	    %   DISKUSSION VON POLARAM: DARF POLARAM BENUTZT WERDEN?
	    %
	        
	        Folgend soll anhand von zwei theoretischen Experimenten gezeigt werden, dass die in einer vorherigen Arbeit entwickelten Methode geeignet ist den Polarisationszustand während des Ramanstreuprozesses zu beschreiben~\cite{eichhorn_beschreibung_2020}. \texttt{PolaRam} beschreibt den eigentlichen Streuprozess als einfache Matrixmultiplikation im Müllerformalismus; die Herleitung der entsprechenden Raman-Müllermatrizen, welche die Ramanaktivität eines Fluids beschreibt, ist nicht trivial und wurde in einer früherer Arbeit im Detail hergleitet~\cite{eichhorn_beschreibung_2020}. In Kürze generiert \texttt{PolaRam} die makroskopischen Raman-Müllermatrizen für Fluide als Mittel über alle möglichen Rotationen im Raum. Die Berechnung erfolgt numerisch als Monte-Carlo-Simulation. Dass bedeutet, dass die makroskopische Raman-Müllermatrix $\mx{M_A}$ aus dem arithmetischen Mittel von vielen rotierten Ramantensoren $\mx{\alpha}$ generiert wird. Die Summe
	        \begin{equation}
	            \mx{M_A} = \frac{1}{N}\, \sum_{l=1}^N \mx{M_{\alpha,l}} = \frac{ 1 }{N}\, \sum_{l=1}^N f( \mx{R_l}^T \cdot \mx{\alpha} \cdot \mx{R_l} )\label{eq:results_monteCarloMittel}
	        \end{equation}
	        gibt die numerische Beschreibung der makroskopischen Müllermatrix an, wenn die Matrix $\mx{R_l}$ eine beliebige Rotation und $f$ die Transformation eines beliebigen Ramantensors $\mx{\alpha}$ in seine molekulare Müllermatrix $\mx{M_{\alpha}}$ beschreibt~\cite{eichhorn_beschreibung_2020}.
	        
	        Für die Simulation der theoretischen Experimente wird der Ramantensor
	        \begin{equation}
	            \mx{\alpha} = \begin{pmatrix*}[r]
	                        -0,2 &  0,4 & -0,9 \\
	                         0,4 & -0,4 &  0,6 \\
	                        -0,9 &  0,6 & -0,7
	                   \end{pmatrix*}
	        \end{equation}
	        parametrisiert. Seine Elemente sind willkürlich gewählt. Mit Hilfe von \texttt{PolaRam} wird $\mx{\alpha}$ in die makroskopische Raman-Müllermatrix
	        \begin{equation}
	            \mx{M_A} \approx \begin{pmatrix*}[r]
	                         0,8394 & -0,0003 & -0,0005 & 0 \\
	                        -0,0003 &  0,2812 & -0,0001 & 0 \\
	                        -0,0005 & -0,0001 &  0,2812 & 0 \\
	                         0      &  0      &  0      & 0
	                    \end{pmatrix*}
	        \end{equation}
	        bestimmt~\cite{eichhorn_polaram_2020}. 
	        
	        Mit dieser Raman-Müllermatrix werden zwei Experimente simuliert: Wie ändert sich das Messsignal eines isotropen und anisotropen Photodetektorsystems bei Variation des Polarisationsgrades oder der Orientierung der Polarisationsebene von linear polarisierter Strahlung? Die Berechnung der Raman-Müllermatrix erfolgt durch \num{1000000} Matrixrotationen und die Antwort eines Detektors $D$ auf einen Stokesvektor $\vc{S}$ wird als gewichtete Summe der Intensitäten entlang der optischen Achsen des Detektors $I_x = \nicefrac{S_0 + S_1}{2}$ und $I_y = \nicefrac{S_0 - S_1}{2}$ ermittelt.
	        \begin{equation}
	            D = \frac{I_x + A \cdot I_y}{1 + A} \label{eq:results_detector_response}
	        \end{equation}
	        
	        Die Konstante $A$ beschreibt die Anisotropie des Detektors. Für $A=1$ verhält sich der Detektor isotrop gegenüber der Lichtpolariation; für $A>1$ reagiert die y-Achse sensitiver auf Strahlung und für $A<1$ wird die x-Achse begünstigt. Mit den Vektoren $\vc{Q}(\sigma)$ und $\vc{P}(\Pi)$ werden je 30 Stokesvektoren mit gleichverteilten Stokeswinkeln $\sigma \in [0;2\pi]$ und Polarisationsgraden $\Pi \in [0;1]$ generiert.
	        \begin{align}
	            \vc{Q}(\sigma) = \begin{pmatrix} 1 \\ \cos(\sigma)                   \\ \sin(\sigma)                   \\ 0 \end{pmatrix} 
	            \quad&\quad
	            \vc{P}(\Pi)    = \begin{pmatrix} 1 \\ \Pi\cdot\cos(\SI{35}{\degree}) \\ \Pi\cdot\sin(\SI{35}{\degree}) \\ 0 \end{pmatrix}
	            \label{eq:results_polaram-stokes}
	        \end{align}
	        Werden diese 30 Stokesvektoren auf die Raman-Müllermatrix $\mx{M_A}$ angewendet und kann mit den resultierenden Vektoren die erwartete Detektorantwort $D$ ermittelt werden.
	        
	        \begin{figure}[!b]
	            %
	            %   PLOT: PolaRam Detektorsignal bei unterschiedlichen Polarisationszustände
	            %
	            \center
	            <<prepare-plot-polaram, echo=F>>=
	                # Read data
	                polaram.rotation <- read.table(file="data/polaram_rotation.csv", header=T)
	                polaram.polarisationRatio <- read.table(file="data/polaram_polarisation.csv", header=T)
	                # Restrucutre data
	                polaram.rotation <- tidyr::pivot_longer(   data=polaram.rotation, 
	                                                           cols=c(fairResponse, biasResponse),
	                                                           names_to="bias", values_to="response" )
	                polaram.polarisationRatio <- tidyr::pivot_longer(   data=polaram.polarisationRatio, 
	                                                                    cols=c(fairResponse, biasResponse),
	                                                                    names_to="bias", values_to="response" )
                    # Create common y-axis
                    polaram.common_y_limit <- c(
                        round(min(c(polaram.rotation[["response"]], polaram.polarisationRatio[["response"]])), digits=2), 
	                    round(max(c(polaram.rotation[["response"]], polaram.polarisationRatio[["response"]])), digits=2)
                    )
	            @
	            <<plot-polaram-rotation, echo=F, fig.height=3, out.width="0.49\\textwidth", subfloat=T>>=
	                # Plot data
	                ggplot( data = polaram.rotation, mapping = aes(x = sigma*180/2/pi, y = response, group = bias, color = bias) ) +
	                    geom_line(size=1) +
	                    geom_point(size=2) +
	                    scale_y_continuous( breaks=seq(from = polaram.common_y_limit[1], to = polaram.common_y_limit[2], length.out=5) ) +
	                    coord_cartesian(ylim = polaram.common_y_limit) +
	                    labs( x = expression(bold("Lage der Polarisationsebene "*epsilon*" / °")),
	                            y = "Detektorantwort",
	                            title = "Simulierter Einfluss der Anisotropie") +
	                    theme_hot() +
	                    theme(  legend.position = "none",
	                            axis.text = element_text(face="bold", size=16),
                                text = element_text(size=16) ) 
	           @
	           <<plot-polaram-polarisation, echo=F, fig.height=3, out.width="0.49\\textwidth", subfloat=T>>=
	                # Plot data
	                ggplot( data = polaram.polarisationRatio, mapping = aes(x = Pi, y = response, group = bias, color = bias) ) +
	                    geom_line(size=1) +
	                    geom_point(size=2) +
	                    scale_y_continuous( breaks=seq(from = polaram.common_y_limit[1], to = polaram.common_y_limit[2], length.out=5) ) +
	                    coord_cartesian(ylim = polaram.common_y_limit) +
	                    scale_color_discrete( labels = c("anisotrop", "isotrop") ) +
	                    labs( x = expression(bold("Polarisationsgrad "*Pi)),
	                            y = element_blank(),
	                            color = "Detektormodell",
	                            title = "") +
	                    theme_hot() +
	                    theme(  legend.position="right",
	                            axis.text.x = element_text(face="bold", size=16),
                                text = element_text(size=16),
	                            axis.text.y=element_blank() )
	            @
	            \caption[Simulation des Detektors im Müllerformalismus]{Die Gültigkeit von \texttt{PolaRam} soll für beliebig linear polarisierte Stokesvektoren gezeigt werden, indem zwei theoretische Experimente simuliert werden. Die Detektorantwort wird ermittelt, indem Stokesvektoren nach Gleichung~\ref{eq:results_polaram-stokes} mit unterschiedlichen Polarisationsgrad $\Pi$ oder unterschiedlicher polarer Stokeskomponente $\sigma$ auf eine parametrisierte Raman-Müllermatrix $\mx{M_A}$ angewendet wird. Anhand der resultierenden Stokesvektoren $\vc{S}$ wird die Intensität entlang der x-Achse $I_x = \nicefrac{S_0 + S_1}{2}$ und y-Achse $I_y = \nicefrac{S_0 - S_1}{2}$ berechnet und die Detektorantwort als gewichtete Summe $\nicefrac{I_x + A\cdot I_y}{1+A}$ ermittelt. Der Faktor $A$ beschreibt die Anisotropie des Detektors. Je größer $A$ ist, desto sensitiver ist das Detektormodell entlang der y-Achse im Vergleich zur anderen optischen Achse. Das isotrope Detektormodell besitzt eine Anisotropie von $A=1$ und das anisotrope Detektormodell besitzt eine Anisotropie von $A=2$. Die Rotation der Polarisationsebene $\varepsilon$ leitet sich für linear polarisierte Strahlung vom polaren Stokesparameter $\sigma = 2\varepsilon$ her~\cite{eichhorn_beschreibung_2020}.}
	            \label{fig:results_polaram}
	        \end{figure}
	        
	        Das Ergebnis ist Abbildung~\ref{fig:results_polaram}. Für das isotrope Detektormodell wird keine Abhängigkeit der Detektorempfindlichkeit von der Polarisation der Lichtwelle erwartet. Nach Abbildung~\ref{fig:results_polaram} ist \texttt{PolaRam} in der Lage dieses Verhalten korrekt abzubilden. Wenn die optische Achse mit einer Orientierung von \SI{90}{\degree} empfindlicher auf einfallende Strahlung reagiert, sagt \texttt{PolaRam} einen deutlichen Zusammenhang zwischen der Lage der Polarisationsebene und der Detektorantwort voraus. Ist die Polarisationsebene bei einer Rotation um \SIlist{0; 180}{\degree} entlang der weniger empfindlichen Achse orientiert, sinkt das Reaktionsvermögen des anisotropen Detektormodells unter das Niveau des isotropen Detektors. Für eine Rotation um \SI{90}{\degree} und damit einer Orientierung der Polarisationsebene entlang der empfindlicheren optischen Achse nimmt die Detektorantwort einen größeren Wert an, als für einen isotropen Detektor erwartet wird. \texttt{PolaRam} scheint auch einen anisotropen Detektor für verschiedene initiale Polarisationsebenen beschreiben zu können.
	        
	        Abbildung~\ref{fig:results_polaram} illustriert außerdem die Gültigkeit der Verallgemeinerung der Raman-Müllermatrixtransformation, welche in diesem Abschnitt vorgestellt wurde. Ändert sich der Polarisationsgrad der initialen Strahlung, schlägt sich dies auch in der Detektorantwort des anisotropen Detektormodells wieder. Weil eine initiale Rotation der Polarisationsebene von $\varepsilon = \SI{17,5}{\degree}$ gewählt wurde, ist die Polarisationsebene der Lichtwelle beinahe parallel zur weniger empfindlichen Achse des Modells. Dementsprechend wird erwartet, dass bei Erhöhung des Polarisationsgrades der Anteil der Strahlung, welcher entlang der empfindlicheren optischen Achse gemessen werden kann, sinkt. Dieser Verlauf wird auch von \texttt{PolaRam} berechnet.
	        
	        
	        
	        \begin{figure}[!b]
	            %
	            %   PLOT: ERROR OF MONTE-CARLO-SIMULATION
	            %
	            \center
	            <<plot-monte-carlo-rotation, echo=F, fig.height=2.5, out.width="\\textwidth", subfloat=T>>=
	               # Read data
	               montecarlo.rotation <- list("isotropic" = read.table(file="data/monteCarlo_rotation_fair.csv", header = T),
	                                             "anisotropic" = read.table(file="data/monteCarlo_rotation_bias.csv", header = T) )
	               # Restructure data
	               montecarlo.rotation <- lapply(montecarlo.rotation, function(dataframe) {
	                    dataframe <- tidyr::pivot_longer(   data=dataframe, 
	                                                        cols=!sigma,
	                                                        names_to="try", names_pattern="([0-9]+)",
	                                                        values_to="response" )
	                   return(dataframe)
	               }) 
	               montecarlo.rotation <- gdata::combine(     isotrop = montecarlo.rotation[["isotropic"]], 
	                                                        anisotrop = montecarlo.rotation[["anisotropic"]])
	               
	               # Plot
	               # Create plot and add formatting
	               montecarlo.rotation.plot <- ggplot( data=montecarlo.rotation, 
	                                                    mapping = aes(x = sigma*180/2/pi, y = response, group = try, color = try) ) +
	                    theme_hot() +
	                    theme(legend.position = "none", strip.text.x = element_text(face="bold") ) +
	                    labs( title = "Reproduzierbarkeit der Monte-Carlo-Simulation",
	                            y = "Detektorantwort",
	                            x = expression(bold("Rotation der Polarisationsebene "*epsilon*" / °")) ) +
	                    facet_wrap( vars(source), scales="free_y" )
	               # Add data points and data lines seperately
	               # The colored lines and points are added for every single color seperately
	               # If geom_line and geom_point are just added to the plot the points and 
	               # lines with the same color would be plotted in completly different layers
	               # ggplots layering order is stupid
	               for( index in rev(unique(montecarlo.rotation[["try"]])) ) {
	                    montecarlo.rotation.plot <- montecarlo.rotation.plot + 
	                                geom_line(  data = montecarlo.rotation[montecarlo.rotation[["try"]] == index,] ) +
                    	            geom_point( data = montecarlo.rotation[montecarlo.rotation[["try"]] == index,] )
	                }
	                # Show the plot
	                montecarlo.rotation.plot
	            @
	            \\
	            <<plot-monte-carlo-polarisation, echo=F, fig.height=2.25, out.width="\\textwidth", subfloat=T>>=
	                # Read data
	               montecarlo.polarisation <- list("isotropic" = read.table(file="data/monteCarlo_polarisation_fair.csv", header = T),
	                                                "anisotropic" = read.table(file="data/monteCarlo_polarisation_bias.csv", header = T) )
	               # Restructure data
	               montecarlo.polarisation <- lapply(montecarlo.polarisation, function(dataframe) {
	                    dataframe <- tidyr::pivot_longer(   data=dataframe, 
	                                                        cols=!Pi,
	                                                        names_to="try", names_pattern="([0-9]+)",
	                                                        values_to="response" )
	                   return(dataframe)
	               }) 
	               montecarlo.polarisation <- gdata::combine(   isotrop = montecarlo.polarisation[["isotropic"]], 
	                                                            anisotrop = montecarlo.polarisation[["anisotropic"]] )
	               
	               # Plot
	               # Create plot and add formatting
	               montecarlo.polarisation.plot <- ggplot( data=montecarlo.polarisation,
	                                                        mapping = aes(x = Pi, y = response, group = try, color = try) ) +
	                    theme_hot() +
	                    theme(legend.position = "none", strip.text.x = element_text(face="bold")) +
	                    labs( x = expression(bold("Polarisationsgrad "*Pi)),
	                            y = "Detektorantwort") +
	                    facet_wrap( vars(source), scales="free_y" )
	               # Add data points and data lines seperately
	               # The colored lines and points are added for every single color seperately
	               # If geom_line and geom_point are just added to the plot the points and 
	               # lines with the same color would be plotted in completly different layers
	               # ggplots layering order is stupid
	               for( index in rev(unique(montecarlo.polarisation[["try"]])) ) {
	                    montecarlo.polarisation.plot <- montecarlo.polarisation.plot + 
	                                geom_line(  data = montecarlo.polarisation[montecarlo.polarisation[["try"]] == index,] ) +
                    	            geom_point( data = montecarlo.polarisation[montecarlo.polarisation[["try"]] == index,] )
	                }
	                # Show the plot
	                montecarlo.polarisation.plot
	            @
	            \caption[Reproduzierbarkeit der Monte-Carlo-Simulation]{Die Reproduzierbarkeit der Generierung einer Müllermatrix für ein Raman-aktives Fluid erfolgt anhand der selben theoretischen Experimente die Abbildung~\ref{fig:results_polaram} generiert haben. Die Experimente werden zehn mal wiederholt. Für jede Wiederholung wird durch die Monte-Carlo-Simulation aus dem parametrisierten Ramantensor $\mx{\alpha}$ eine neue Müllermatrix $\mx{M_A}$ generiert. Jede Müllermatrix wird in Ihrer eigenen Farbe dargestellt. Die Detektorantwort wird ermittelt, indem Stokesvektoren mit unterschiedlichen Polarisationsgrad $\Pi$ oder unterschiedlicher polarer Stokeskomponente $\sigma$ auf $\mx{M_A}$ angewendet wird. Anhand der resultierenden Stokesvektoren $\vc{S}$ wird die Intensität entlang der x-Achse $I_x = \nicefrac{S_0 + S_1}{2}$ und y-Achse $I_y = \nicefrac{S_0 - S_1}{2}$ berechnet und die Detektorantwort als gewichtete Summe $\nicefrac{I_x + A\cdot I_y}{1+A}$ ermittelt. Der Faktor $A$ beschreibt die Anisotropie des Detektors. Je größer $A$ ist, desto sensitiver ist das Detektormodell entlang der y-Achse im Vergleich zur anderen optischen Achse. Das isotrope Detektormodell besitzt eine Anisotropie von $A=1$ und das anisotrope Detektormodell besitzt eine Anisotropie von $A=2$. Die Rotation der Polarisationsebene $\varepsilon$ leitet sich für linear polarisierte Strahlung vom polaren Stokesparameter $\sigma = 2\varepsilon$ her~\cite{eichhorn_beschreibung_2020}.}
	            \label{fig:results_monte-carlo}
	        \end{figure}
	        
	        Allerdings zeigen Berechnungen mit \texttt{PolaRam} des isotropen Detektormodells einen systematischen Fehler: Sowohl für variierende Polarisationsgrade als auch für Rotation der Polarisationsebene zeigt sich eine sehr kleine Abhängigkeit der Detektorantwort von der Polarisation der Strahlung. Abbildung~\ref{fig:results_monte-carlo} zeigt den Trend deutlicher. Darüber hinaus stellt Abbildung~\ref{fig:results_monte-carlo} den Einfluss der Monte-Carlo-Simulation, die für die Raman-Müllertransformation eingesetzt wird, auf die oben diskutierten Simulationen dar. Um die Ursache des systematischen Fehlers zu finden werden die zwei Experimente mit dem selben Ramantensor $\mx{\alpha}$ und den selben initialen Stokesvektoren $\vc{Q}(\sigma)$ und $\vc{P}(\sigma)$, aber mit einer neuen Raman-Müllermatrix $\mx{M_A}$ wiederholt. Vor jeder der zehn Wiederholungen wird aus dem Ramantensor $\mx{\alpha}$ wie oben beschrieben eine neue Raman-Müllermatrix hergeleitet. Wie zuvor geschieht dies mit einer Monte-Carlo-Simulation und \num{1000000} Matrixrotationen. Abbildung~\ref{fig:results_monte-carlo} vergleicht die Berechnungen auf Grundlage der zehn neuen Raman-Müllermatrizen. Der systematische Fehler zeigt sich in jeder Simulation, Ausmaß und Form unterscheidet sich zwischen den Müllermatrizen aber stark. Die Ursache dieses Fehlers ist nicht die mathematische Beschreibung des Ramanstreuprozesses, sondern die numerische Natur der Monte-Carlo-Simulation. Egal wie oft der Ramantensor in der Monte-Carlo-Simulation rotiert wird, stellt die gewählte Menge der Rotationen nur eine Untermenge aller möglichen Rotationen im dreidimensionalen Raum dar. Folglich ist das Resultat der Monte-Carlo-Simulation eine unvollständige Beschreibung eines Raman-aktiven Fluids. Weil die Untermenge für jede Simulation neu und zufällig gewählt wird, unterscheidet sich der systematische Fehler von Müllermatrix zu Müllermatrix. Der Mittelwert über \num{1000000} Rotationen liefert allerdings einen vernachlässigbar kleinen Fehler.

	        Abbildungen~\ref{fig:results_polaram} und~\ref{fig:results_monte-carlo} zeigen damit das Potential von \texttt{PolaRam} den Ramanstreuprozess von beliebig linear polarisierter oder unpolarisierter Strahlung zu simulieren. Abschnitte~\ref{sec:results_detektorAnisotropie} und~\ref{sec:results_ramanspektren} werden auf diese Methode zurückgreifen, um die Anisotropie eines realen Detektorsystems zu beschreiben.
	
	
	
    \section{Anisotropie des Ramanspektrometers}\label{sec:results_detektorAnisotropie}
        %
        %   + Weßlichtspektren
        %   + Tetraspektren
        %
        
        Folgend wird betrachtet wie sich die Polarisation von Licht auf das Messsignal eines realen Ramanspektrometers auswirkt. Dafür werden Spektren von einer Weißlichtlampe und Tetrachlormethan gemessen. Die Weißlichtlampe und der Anregungslaser werden dabei linear polarisiert und die Spektren für verschiedene Orientierungen der Polarisationsebene aufgenommen.
        
        \begin{figure}[!ph]
            %
            %   PLOT white lamp spectra
            %
            \centering
            \subfloat[]{\includegraphics[width=0.75\textwidth]{img/aufbau_weisslicht.pdf}\label{subfig:results_whitelamp_spectra_exp}} \\
            <<plot-whitelamp-spectra, echo=F, fig.height=3, subfloat="\\label{subfig:results_whitelamp_spectra_spec}">>=
                # Read data from file
                whitelamp.spectra <- read.table(file = "data/detector_spectra.csv", header = T)
                # Create plot
                ggplot(whitelamp.spectra,
                        mapping = aes(x=wavenumber, y=signal, color=color, group=P) ) +
                        geom_line(size=0.2) +
                        facet_wrap(facets=vars(exp), scales = "free_y") +
                        theme_hot() + 
                        theme(strip.text = element_text(face="bold"), 
                                legend.position = "right") +
                        scale_color_gradient(low    = "blue", 
                                                high   = "red", 
                                                breaks = seq(from=0, to=90, by=45) ) +
                        scale_x_continuous(breaks = seq(from=500, to=4000, by=1000)) +
                        labs(x = expression(bold("Wellenzahl "*nu*" / cm"^"-1")),
                                y = expression(bold("normierte Intensität")),
                                title = "Polarisationsabhängige Weißlichtspektren",
                                color = expression(bold(delta*" / °")))
            @
            \\
            <<plot-whitelamp-relDiff, echo=F, fig.height=3, subfloat="\\label{subfig:results_whitelamp_spectra_diff}">>=
                # Read data from file
                whitelamp.relDiff <- read.table(file = "data/detector_relDiff.csv", header = T)
                # Create plot
                ggplot(whitelamp.relDiff,
                        mapping = aes(x=wavenumber, y=signal, color=color, group=P) ) +
                    geom_line(size=0.2) +
                    facet_wrap(facets=vars(exp)) +
                    theme_hot() + 
                    theme(strip.text = element_text(face="bold"), 
                    legend.position = "right") +
                    scale_color_gradient(low    = "blue", 
                                            high   = "red", 
                                            breaks = seq(from=0, to=90, by=45) ) +
                    scale_x_continuous(breaks = seq(from=500, to=4000, by=1000)) +
                    labs(x = expression(bold("Wellenzahl "*nu*" / cm"^"-1")),
                            y = expression(bold("Abweichung "*Delta["rel"])),
                            title = "Anisotropie des Ramanspektrometes",
                            color = expression(bold(delta*" / °")))
            @
            \caption[Polarisationsabhängige Weißlichtspektren]{\subref{subfig:results_whitelamp_spectra_exp}~Versuchsaufbau. Das Weißlicht wird durch den Depolarisator (1) und den Linearpolarisator (2) entlang eines beliebigen Rotationswinkels $\varepsilon$ linear polarisiert. Die Einkopplung des Lichts erfolgt entweder durch das Ramanmikroskop und die Mehrmodenfaser \optelem{F3} (3) leitet die Lichtwelle zum Detektorsystem oder direkt am Detekor. Details siehe Anhang~\ref{sec:appendix_method_characterisation} Seite~\pageref{fig:method_weisslicht}.
            \subref{subfig:results_whitelamp_spectra_spec}~Vergleich der Spektren von unterschiedlich linear polarisiertem Weißlicht. Die Weißlichtspektren wurden durch das vom Hersteller mitgelieferte Weißlichtspektrum dividiert.
            \subref{subfig:results_whitelamp_spectra_diff}~Die relative Abweichung der Weißlichtspektren von ihrem Mittelwertsspektrum $\Delta_{\mathrm{rel}}$.
            Der Winkel $\delta$ beschreibt wie stark sich die Lage der Polarisationsebene $\varepsilon$ von den optischen Achsen des Detekors unterscheidet. Für $\delta = \SI{0}{\degree}$ ist das Weißlicht entlang der weniger sensitiven Achse ausgerichtet.}
            \label{fig:results_whitelamp_spectra}
        \end{figure}
        
        
        Abbildung~\ref{fig:results_whitelamp_spectra} zeigt das Ergebnis der Weißlichtmessungen. Es wurden zwei Spektrensätze gemessen: Für den ersten Spektrensatz wurde die Kalibrationslampe mit dem Mikroskop in die Mehrmodenfaser \optelem{F3} eingekoppelt. Weil die Faser und das Mikroskop die Intensität der Lampe stark verringern, wurde ein weiterer Spektrensatz aufgenommen. Dabei wurde die Lampe direkt in das Spektrometer eingestrahlt.
        Abbildung~\ref{subfig:results_whitelamp_spectra_spec} zeigt die Weißlichtspektren und macht deutlich, dass die Intensität der Spektren sich kontinuierlich mit der Rotation der Polarisationsebene ändert. Dabei liegen das minimale und das maximale Spektrum einen Rotationswinkel von \SI{90}{\degree} auseinander. Folglich besitzt das Detektionssystem zwei optische Achsen, die unterschiedlich sensitiv für die eingestrahlte Lichtwelle sind. Weil optische Gitter bekanntlich anisotrop sind, sind sie vermutlich die Hauptursache für diesen Effekt~\cite{kho_reduction_2005}. Wie in Abschnitt~\ref{sec:theo_ramanspektrometer} vermutet, kann die Polarisation der gemessenen Strahlung einen Einfluss auf die Form der Spektren haben.
        Das Mikroskop und \optelem{F3} nehmen auch einen großen Einfluss auf die Spektren. Das Signal-Rausch-Verhältnis nimmt ab. Die Spektren besitzen ein rauschartiges Muster. Weil es bei häufigerer Akkumulation bestehen bleibt, handelt es sich wahrscheinlich um durch die optische Faser induzierte Artefakte. Dieselben Artefakte treten in Ramanspektren von schwachen Streuern auf. Die Spektren von \chemical{Phe} und Trilaurin in Abschnitt~\ref{sec:results_ramanspektren} sind Beispiele dafür. Weil der Einsatz von \optelem{F2} und \optelem{F3} die Leistung des Anregungslasers stark vermindert, kann das ein Problem bei der Messung der Ramanspektren darstellen.
        
        Abbildung~\ref{subfig:results_whitelamp_spectra_diff} stellt die Abweichung der Spektren von dem Mittelwert aller Weißlichtspektren für jedes Pixel dar. Dadurch wird berücksichtig, dass die Intensität der Weißlichtlampe von der Wellenzahl des Lichts abhängt. Für beide Aufbauten weichen die Spektren mit steigender Wellenzahl stärker vom Mittel ab. Die Anisotropie des Gitters nimmt folglich mit kleineren Wellenlängen zu. Bei Wellenzahlen kleiner als \SI{500}{\per\centi\meter} schwankt das Messignal um weniger als \SI{10}{\percent}. Die Schwankungen steigen bis \SI{4000}{\per\centi\meter} auf ungefähr \SI{37}{\percent} an. 
        Der Vergleich beider Aufbauten zeigt, dass das Mikroskop und \optelem{F3} die Polarisationsempfindlichkeit des Ergebnisses reduzieren. Die Intensität der Weißlichtspektren ändert sich nur noch um ca. \SI{8}{\percent} (\SI{<500}{\per\centi\meter}) bis \SI{20}{\percent} (\SI{4000}{\per\centi\meter}). 
        Die bei \SI{200}{\per\centi\meter} beobachtete starke Anisotropie (vgl. Abb.~\ref{subfig:results_whitelamp_spectra_diff} ist auf den Rayleighfilter zurückzuführen und spielt für die Messungen keine Rolle, da erst bei höheren Wellenzahlen gemessen wird.
        
        Die komplexe Abhängigkeit der Anisotropie von der Wellenzahl gestaltet eine Methode zur Korrektur von Ramanspektren sehr aufwendig. Für jedes Ramanspektrometer müsste die Lage der optischen Achsen des Gitters und die Lage der Polarisationsebene des Lasers bekannt sein. Darüber hinaus müsste für jede Probe bekannt sein wie ihre Schwingungsmoden die Polarisation des Anregungslasers verändern.
        
        Die geringere Polarisationsempfindlichkeit des Aufbaus mit Mikroskop und Faser ist auf die depolarisierenden Eigenschaften der Mehrmodenfaser \optelem{F3} zurückzuführen. Weil bei der Messung der Ramanspektren zusätzlich \optelem{F2} verwendet wird, ist zusätzlich der Polarisationsgrad der einfallenden Strahlung geringer, sodass die Polarisationsabhängigkeit des gesamten Systems noch geringer ausfallen sollte.
        
        \begin{figure}[!t]
            %
            %   PLOT Exemplarisches Tetraspektrum
            %
            \centering
            \subfloat[]{\includegraphics[width=0.75\textwidth]{img/aufbau_ramanspektren.pdf}\label{subfig:results_tetra_spectra_exp}} \\
            <<plot-tetra-spectrum, echo=F, fig.height=3, subfloat="$\\omega = \\SI{0}{\\degree}$\\label{subfig:result_tetra_spectra_spec}", out.width="0.49\\textwidth">>=
                # Read data from file
                tetra.spectra <- read.table(file = "data/tetra_spectra.csv", header=T)
                # Plot one of the spectra
                ggplot(data = tetra.spectra,
                        mapping = aes(x=wavenumber, y=X0) ) +
                    geom_line(size=1) +
                    theme_hot() +
                    theme(text = element_text(face="bold", size=16),
                            axis.text = element_text(face="bold", size=16) ) +
                    scale_x_continuous(limits = c(200,850)) +
                    labs(x = expression(bold("Wellenzahl "*nu*" / cm"^"-1")),
                        y = "norm. Intensität",
                        title = "Ramanspektrum von Tetrachlormethan")
            @
            \hfill
            <<plot-tetra-realPeakChange, echo=F, fig.height=3, subfloat="\\label{subfig:result_tetra_spectra_change}", out.width="0.49\\textwidth">>=
                # Read data from file
                tetra.realPeakChange <- read.table(file = "data/tetra_realPeakChange.csv", header=T)
                # Create plot
                ggplot(data = tidyr::pivot_longer(tetra.realPeakChange, cols=!waveplate,
                                  names_to="wavenumber", values_to="signal",
                                  names_pattern="(\\d+)"),
                        mapping = aes(x=waveplate, y=signal, group=wavenumber, color=wavenumber) ) +
                    geom_line(size=2) + geom_point(size=3) +
                    theme_hot() + 
                    theme(legend.position = "right",
                            text = element_text(face="bold", size=16),
                            axis.text = element_text(face="bold", size=16) ) +
                    scale_x_continuous(breaks = seq(from=0, to=180, by=45)) +
                    labs(x = expression(bold("Rotation der Halbwellenplatte "*omega*" / °")),
                        y = "norm. Intensität",
                        title = "Bandenhöhen von Tetrachlormethan",
                        color = expression(bold(nu*" / cm"^"-1")) )
            @
            \caption[Ramanspektrum von Tetrachlormethan]{\subref{subfig:results_tetra_spectra_exp}~Versuchsaufbau. Die Polarisationsebene des Laserstrahls wird durch die Halbwellenplatte (1) beliebig rotiert, indem sie um den Winkel $\omega$ gedreht wird. Die Einmodenfaser \optelem{F2} (2) leitet den Anregungslaser in das Ramanmikroskop mit der Probe (3). Das rückgestreute Licht wird durch die Mehrmodenfaser \optelem{F3} (4) zum Photodetektorsystem geleitet. Details siehe Anhang~\ref{sec:appendix_method_characterisation} Seite~\pageref{fig:method_ramanspektrum}. 
            Der Untergrund der Ramanspektren wird mit dem R-Paket \texttt{baseline} geschätzt und entfernt~\cite{liland_optimal_2010}. Anschließend werden die Spektren vektornormiert. \subref{subfig:result_tetra_spectra_spec}~Das Ramanspektrum von Tetrachlormethan.  \subref{subfig:result_tetra_spectra_change}~Die Polarisationsabhängigkeit der Bandenhöhen. }
            \label{fig:results_tetra_spectra}
        \end{figure}
        
        Abbildung~\ref{fig:results_tetra_spectra} zeigt das Ramanspektrum von \ce{CCl4} und die Abhängigkeit der Bandenhöhe von der Polarisation des Anregungslasers. Die Höhe aller Tetrachlormethanbanden wird durch die Rotation der Polarisationsebene des linear polarisierten Anregungslasers beeinflusst. Abbildung~\ref{subfig:result_tetra_spectra_change} zeigt, dass die Polarisation unterschiedliche Auswirkungen auf jeden Peak haben kann: Die maximale Bandenhöhe bei \SIlist{222;316}{\per\centi\meter} fällt nicht mit dem Maximum bei \SI{463}{\per\centi\meter} zusammen. Die Banden bei \SIlist{765;794}{\per\centi\meter} verändert sich nicht.
        
        Um die Anisotropie des Detektors zu berechnen, werden die Ramanspektren von \ce{CCl4} simuliert. Die Simulation der Ramanspektren ähnelt den Berechnungen in Abschnitt~\ref{subsec:results_polaram}, Seite~\pageref{subsec:results_polaram}. Die Ramantensoren von \ce{CCl4} werden mit \texttt{PolaRam} in Müllermatrizen $\mx{M_{\ce{CCl4}}}$ übersetzt~\cite{eichhorn_polaram_2020}. Die Polarisation des Anregungslasers nach der Einmodenfaser \optelem{F2} wird durch die Stokesvektoren $\vc{T}^{\varepsilon}$ beschrieben (siehe Abb.~\ref{fig:results_muellerF1F2F3}). Mit der Müllermatrix der Mehrmodenfaser $\mx{F}$ (Gl.~\ref{eq:results_F3_muellermatrix}) simuliert $\mx{F} \cdot \mx{M_{\ce{CCl4}}} \cdot \vc{T}^{\varepsilon} $ die Polarisation der Strahlung, welche auf das Detektorsystem trifft. Nach Gleichung~\ref{eq:results_detector_response} wird aus diesen Stokesvektoren die Strahlungsintensität entlang der optischen Achsen des Detektors ($I_x$, $I_y$) berechnet und das simulierte Ramansignal
        \begin{equation}
            D = \frac{I_x + A \cdot I_y}{1 + A} \label{eq:results_detector_response-2}
        \end{equation}
        bestimmt. Der Parameter $A$ wurde bereits in Abschnitt~\ref{subsec:results_polaram} eingeführt und beschreibt die Anisotropie des Detektors.
        
        \begin{table}[!p]
            %
            %   TABLE Regressionsparameter Detektoranisotropie
            %
            \centering
            \caption[Anisotropie des Ramanspektrometers]{Für jede Bande im Ramanspektrum von \ce{CCl4} wird die Anisotropie des Detektorsystems durch den Parameter $A_{\ce{CCl4}}$ beschrieben. Aus den Weißlichtspektren (Abb.~\ref{subfig:results_whitelamp_spectra_spec}) wird derselbe Parameter berechnet, indem das maximale Spektrum durch das minimale Spektrum dividierd wird. $A_{\mathrm{ideal}}$ beschreibt die Anisotropie des Spektrometers ohne Mikroskop und Faser. $A_{\mathrm{real}}$ beschreibt die Anisotropie des Spektrometers mit Mikroskop und Faser. Nach Gleichung~\ref{eq:results_detector_response-2} reagiert die sensitivere optische Achse $A$-mal empfindlicher auf elektromagnetische Strahlung als die andere Achse. $\nu$ ist die Wellenzahl der Banden.}
            \label{tab:results_tetra_biasY}
            <<kable-tetra-biasY, echo=F, results="asis">>=
                # Read data from file
                tetra.biasY <- read.table("data/anisotropy.csv", header=T)
                # Create table
                knitr::kable(tetra.biasY, format="latex", booktabs=T, align="S", escape=F, digits = 3,
                             col.names = c("{$\\nu / cm^{-1}$}", "{$A_{\\ce{CCl4}}$}", "{$A_{\\mathrm{real}}$}", "{$A_{\\mathrm{ideal}}$}")
                            )
            @
        \end{table}
        \begin{figure}[!p]
            %
            %   PLOT Fitting of tetras peak height change
            %
            \centering
            <<plot-tetra-simulatedPeakChange, echo=F, fig.height=6>>=
                # Read data from file
                tetra.simulatedPeakChange <- read.table(file="data/tetra_simulatedPeakChange.csv", header=T)
                # Plot that shit
                ggplot(data = tetra.simulatedPeakChange,
                        mapping = aes( x = waveplate, y = signal, group = group, color = source ) ) +
                    facet_wrap(facets = vars(wavenumber), scales="free_y", ncol=2 ) +
                    geom_line() + geom_point() + 
                    theme_hot() + 
                    theme(strip.text.x = element_text(face="bold"),
                            legend.position = "bottom") +
                    scale_color_manual(name   = element_blank(), 
                                        labels = c("Messung", "Simulation"),
                                        values = scales::hue_pal()(2)) +
                    labs(x = expression(bold("Rotation der Halbwellenplatte "*omega*" / °")),
                            y = "normierte Intensität",
                            title = "Simulation des anisotropen Ramanspektrometers")
            @
            \caption[Anisotropie des Ramanspektrometers]{Die Änderung der Bandenhöhe im Ramanspektrum aus Abbildung~\ref{subfig:result_tetra_spectra_change} wird simuliert und an die gemessenen Spektren gefittet. Der resultierende Regressionsparameter $A$ beschreibt die Anisotropie des Detektors. Tabelle~\ref{tab:results_tetra_biasY} listet die Parameter der fünf Banden auf.}
            \label{fig:results_simulated_peakChange}
        \end{figure}
        
        Der Parameter $A$ wird für jede Bande des Tetrachlormethanspektrums ermittelt, indem die gemessene Bandenänderung mit den Simulationsergebnissen gefittet werden. Dafür wird aus Gleichung~\ref{eq:results_detector_response-2} und den simulierten Ramanspektren ein nicht-lineares Model formuliert, dass mit dem Kleinste-Quadrate-Schätzer an die gemessenen Bandenänderungen angepasst wird. Als Startwert wird der isotrope Detektor gewählt ($A=1$). Tabelle~\ref{tab:results_tetra_biasY} und Abbildung~\ref{fig:results_simulated_peakChange} sind das Resultat. 
        
        Zusätzlich wird der Anisotropieparameter $A$ anhand der Weißlichtspektren ermittelt, indem das Weißlichtspektrum mit der größten Intensität durch das Spektrum mit der kleinsten Intensität geteilt wird. Tabelle~\ref{tab:results_tetra_biasY} vergleicht die Paramter der verschiedenen Messungen. Weil Mikroskop und Fasern das Weißlicht depolarisieren, sollte keine Messung eine größere Anisotropie bestimmen als die direkte Einstrahlung der Weißlichtlampe in das Spektrometer ($A_{\mathrm{ideal}}$). Desweiteren wird die Strahlung um so stärker depolarisiert, desto mehr Fasern sie passieren muss. Das Weißlicht, welches über das Mikroskop eingekoppelt wurde, wird nur von der Mehrmodenfaser depolarisiert und die Spektren zeigen deshalb eine schwächere Polarisationsabhängikeit ($A_{\mathrm{real}} < A_{\mathrm{ideal}}$). Weil für die Messung der Ramanspektren die Mehr- und Einmodenfaser eingesetzt wurden, wird erwartet, dass die Ramanspektren Parameter im Interval $[1,A_{\mathrm{real}}[$ liefern.
        
        Weil es sich bei \SI{765}{\per\centi\meter} um eine kombinatorische Schwingung handelt, kann sie nicht mit \texttt{Gaussian} berechnet werden. Diese Bande wird deshalb nicht diskutiert.
        Der Verlauf der übrigen Banden wird durch die ermittelten Regressionsparameter gut beschrieben. Die Regressionsparameter selbst entsprechen allerdings nicht den Erwartungen. Tabelle~\ref{tab:results_tetra_biasY} zeigt, dass die Anisotropieparameter $A_{\ce{CCl4}}$ für die ersten beiden Banden mit \numlist{1.488;1.534} deutlich größer als die Weißlichtparameter $A_{\mathrm{real}}$ (\numlist{1.120; 1.067}) sind. Gleichzeitig ist $A_{\ce{CCl4}}$ für \SI{463}{\per\centi\meter} kleiner als eins. Das würde bedeuten, dass die sensitiviere optische Achse für diesen Peak und die Weißlichtspektren nicht die gleiche ist. Das kann nicht der Fall sein, weil alle Spektren mit dem selben Spektrometer gemessen wurden. Abbildung~\ref{fig:results_simulated_peakChange} zeigt allerdings, dass der Bandenverlauf bei \SI{463}{\per\centi\meter} durch $A=\num{0.949}$ sehr gut genährt wird. Dieser Widerspruch lässt vermuten, dass die Polarisation des Anregungslaser nicht der einzige Einfluss auf die Bandenhöhe ist. Die große Anisotropie bei \SI{318}{\per\centi\meter} spricht ebenfalls für ein Phänomen, welches den Bandenverlauf stärker bestimmt als die diskutierten Effekte. Die Ursache der großen Anisotropie bei \SI{222}{\per\centi\meter} ist wahrscheinlich der Rayleighfilter des Ramanspektrometers. Der Vergleich der Weißlichtspektren zeigt deutlich einen Teil der Filterkante bei \SI{~200}{\per\centi\meter} (Abb.~\ref{subfig:results_whitelamp_spectra_spec}) und eine größere effektive Anisotropie ($A_{\mathrm{real}}=\num{1.120}$, $A_{\mathrm{ideal}}=\num{1.079}$), obwohl die Faser das Weißlicht depolarisiert. Nur die Bande bei \SI{794}{\per\centi\meter} liefert eine physikalisch sinnvolle Anisotropiekonstante. 
        
        Warum die Isotropie des Detektors nur für einen Peak korrekt bestimmt werden kann ist nicht klar. Der Bandenverlauf bei \SIlist{222;318;463}{\per\centi\meter} ist zu glatt um Rauschen als Grund aufführen zu können. Weil die optischen Fasern ausführlich charakterisiert wurden, sind diese wahrscheinlich auch nicht die Ursache. Anders als die Fasern und Halbwellenplatte wurde das Mikroskop nicht charakterisiert und könnten die Polarisation der Streustrahlung unvorhergesehen verändern. Die Normierungsmethode kann ebenfalls eine Fehlerquelle sein: Die Höhe jeder Bande ist bei der Vektornormierung von allen anderen Bandenhöhen abhängig. Dadurch wird für ein einzelnes Spektrum das Peakverhältnis erhalten, aber der Vergleich von mehreren Spektren kann durch variierende Messbedingungen beeinträchtigt werden. Die Normierung auf eine polarisationsunempfindliche Bande würde diese Fehlerquelle beseitigen. Im vorliegenden Fall war eine geeignete Bande allerdings nicht vorhanden. Alternativ ist die Normierung auf ein Spektrum denkbar, dass mit einem vollständig depolarisierten Laser gemessen wurde.
        
        Mit dem gewählten Aufbau lässt sich der Einfluss der Laserpolarisation auf das Ramanspektrum nicht zeigen. Obgleich im Experiment ein Effekt festgestellt wurde, der die Bandenverhältnisse beeinflusst, ist dieser größer als das untersuchte Phänomen.
        

    \section{Polarisationsabhänige Ramanspektroskopie üblicher Systeme}\label{sec:results_ramanspektren}
        %
        %   + Phenylalanin -> qualitativ diskutieren, Fserartefakte
        %   + Trilaurin -> warum nicht geklappt -> signal-rausch-verhältnis asche, weil k.A.
        %   + 4-AAP -> klappt nicht, weil oberflächenrauheit zerstörrt köharrenz, weil viele unabhängige streuzentren
        %
        
        Um die Relevanz der Laserpolarisation für Stoffe zu untersuchen, die in biologischen oder medizinischen Proben enthalten sind, werden die Aminosäure Phenylalanin und das Fettmolekül Trilaurin gemessen. \chemical{Phe} wurde ausgewählt, weil seine \SI{1000}{\per\centi\meter}-Bande bei der Untersuchung von Bakterien häufig sehr prominent ist. Trilaurin wurde als Model für Lipidschichten und Fette in biologischen Zellen ausgewählt. Da in dieser Arbeit von frei rotierbaren Probemolekülen ausgegangen wird, wurde Phenylalanin in Salzsäure ($\pH = 1$) gelöst und Trilaurin bei \SI{60}{\celsius} geschmolzen. Desweiteren wird \chemical{4-AAP} untersucht, weil es ein gängiges Mittel ist um Ramanspektren zu kalibrieren. Um frei rotierbaren Probenmoleküle annehmen zu können, wird das \chemical{4-AAP} fein gemahlen und verpresst. Dadurch sind die Kristalle im Laserfokus möglichst klein und unterschiedlich orientiert, sodass sich das feste \chemical{4-AAP} näherungsweise isotrop verhalten sollte. 
        
        \begin{figure}[!b]
            %
            %   Plot Spectra Phenylalanin
            %
            \centering
            <<plot-phe-spectra, echo=F, fig.height=3>>=
                # Read data from file
                phe.spectra <- read.table("data/phe_spectra.csv", header=T)
                # Plot
                ggplot(data = phe.spectra,
                        mapping = aes(x = wavenumber, y = signal, color=as.numeric(waveplate)*2, group=waveplate) ) +
                    geom_line(size=0.2) +
                    scale_color_gradientn(colours=scales::hue_pal()(3), 
                                            breaks=seq(from=0, to=180, by=45)) +
                    theme_hot() +
                    theme(legend.position="right") +
                    labs( x = expression(bold("Wellenzahl "*nu*" / cm"^"-1")),
                            y = "normierte Intensität",
                            color = expression(bold(epsilon*" / °")),
                            title = "Ramanspektren von Phenylalanin") 
            @
            \caption[Ramanspektren Phenylalanin]{Polarisationsabhängigkeit von Phenylalaninspektren in saurer Lösung. Die Polarisationsebene des linear polarisierten Anregungslasers ist um den Winkel $\varepsilon$ gedreht. 
            Der Untergrund der Ramanspektren wird mit dem R-Paket \texttt{baseline} geschätzt und entfernt~\cite{liland_optimal_2010}. Anschließend werden die Spektren vektornormiert.}
            \label{fig:results_phe_spectra}
        \end{figure}
        \begin{figure}[!b]
            %
            %   Plot Spectra Trilaurin
            %
            \centering
            <<plot-trilaurin-spectra, echo=F, fig.height=3>>=
                # Read data from file
                trilaurin.spectra <- read.table("data/trilaurin_spectra.csv", header=T)
                # Plot
                ggplot(data = trilaurin.spectra,
                        mapping = aes(x = wavenumber, y = signal, color=as.numeric(waveplate)*2, group=waveplate) ) +
                    geom_line(size=0.2) +
                    scale_color_gradientn(colours=scales::hue_pal()(3), 
                                            breaks=seq(from=0, to=180, by=45)) +
                    theme_hot() +
                    theme(legend.position="right") +
                    labs( x = expression(bold("Wellenzahl "*nu*" / cm"^"-1")),
                            y = "normierte Intensität",
                            color = expression(bold(epsilon*" / °")),
                            title = "Ramanspektren von Trilaurin") 
            @
            \caption[Ramanspektren Trilaurin]{Polarisationsabhängigkeit von Trilaurinspektren in flüssiger Phase. Die Polarisationsebene des linear polarisierten Anregungslasers ist um den Winkel $\varepsilon$ gedreht.
            Die Spektren sind vektornormiert.}
            \label{fig:results_trilaurin_spectra}
        \end{figure}
        
        Abbildung~\ref{fig:results_phe_spectra} zeigt die Ramanspektren von \chemical{Phe} bei Rotation der Polarisationsebene des Anregungslasers. Obwohl die Löslichkeit von \chemical{Phe} in Wasser durch Reduktion des \pH-Wertes gesteigert wird, ist die Lösung ein schwacher Ramanstreuer. Wie schon die Weißlichtspektren in Abbildung~\ref{subfig:results_whitelamp_spectra_spec} (S.~\pageref{subfig:results_whitelamp_spectra_spec}) zeigt \chemical{Phe} dementsprechend auch deutliche Faserartefakte. Wegen der schlechten Streueigenschaften der Lösung wurde die Zahl der Akkumulationen zu Gunsten der Integrationszeit auf eins reduziert. Beim Vergleich der Spektren $\varepsilon=\SI{0}{\degree}$ und $\varepsilon=\SI{180}{\degree}$ wird deutlich, dass neben der Faserartefakte auch ein schlechtes Signal-Rausch-Verhältnis die Qualität der Spektren beeinträchtigt. Die Rotation der Polarisationsebene um \SI{180}{\degree} entspricht der Einheitsoperation und sollte folglich das selbe Spektrum und die selben Faserartefakte generieren. Dies ist in Abbildung~\ref{fig:results_phe_spectra} nicht der Fall. Auf eine quantitative Auswertung der Spektren wird daher verzichtet. Qualitativ kann festgestellt werden, dass die Banden um \SIlist{1200;1600}{\per\centi\meter} eine Polarisationsabhängigkeit besitzen. Die Bande bei \SI{1000}{\per\centi\meter} zeigt zwar auch eine Polarisationsabhängigkeit, aber hier stimmen die Bandenhöhen nach einer Rotation der Polarisationsebene um \SI{180}{\degree} nicht miteinander überein. Eine genauere Auswertung erfordert häufiger akkumulierte Spektren.

        Abbildung~\ref{fig:results_trilaurin_spectra} zeigt die Polarisationsabhängigkeit der Trilaurinspektren. Aufgrund experimenteller Schwierigkeiten besitzen sie einen unerwartet komplizierten Untergrund. Auf eine Abschätzung des Untergrunds und Korrektur der Spektren wurde daher verzichtet. Die Ursache des Untergrunds konnte nicht ermittelt werden: Es wurden der Laserfokus kontrolliert, der Aggregatzustand und Verunreinigung der Probe visuell überprüft sowie Integrationszeit und Akkumulationszahl optimiert. Es lassen sich dennoch die gleichen Faserartefakte erkennen, die schon in den Weißlicht- und Phenylalaninspektren aufgetreten sind. Des weiteren scheinen die Banden bei \SIlist{1250;1500;2900}{\per\centi\meter} mit der Laserpolarisation zu variieren. Die Faserartefakte und die fehlende Untegrundabschätzung machen eine eindeutige Identifikation der Ramansignale sowie verlässliche Aussagen über ihre Polarisationsabhängigkeit unmöglich.
        
        \begin{figure}[!b]
            %
            %   Plot Spectra 4-AAP
            %
            \centering
            <<plot-AAP-spectra, echo=F, fig.height=3>>=
                # Read data from file
                AAP.spectra <- read.table("data/AAP_spectra.csv", header=T)
                # Plot
                ggplot(data = AAP.spectra,
                        mapping = aes(x = wavenumber, y = signal, color=as.numeric(waveplate)*2, group=waveplate) ) +
                    geom_line(size=0.1) +
                    scale_color_gradientn(colours=scales::hue_pal()(3), 
                                            breaks=seq(from=0, to=180, by=45)) +
                    theme_hot() +
                    theme(legend.position="right") +
                    labs( x = expression(bold("Wellenzahl "*nu*" / cm"^"-1")),
                            y = "normierte Intensität",
                            color = expression(bold(epsilon*" / °")),
                            title = "Ausschnitt Ramanspektren von 4-AAP") + 
                    coord_cartesian(xlim=c(1150, 1700))
            @
            \caption[Ramanspektren \chemical{4-AAP}]{Polarisationsabhängigkeit von \chemical{4-AAP}. Die Polarisationsebene des linear polarisierten Anregungslasers ist um den Winkel $\varepsilon$ gedreht.
            Der Untergrund der Ramanspektren wird mit dem R-Paket \texttt{baseline} geschätzt und entfernt~\cite{liland_optimal_2010}. Anschließend werden die Spektren vektornormiert.}
            \label{fig:results_AAP_spectra}
        \end{figure}
        
        Abbildungen~\ref{fig:results_phe_spectra} und \ref{fig:results_trilaurin_spectra} illustrieren die Komplexität organischer Moleküle. Der Effekt, der sich bei \ce{CCl4} auf die Ramanspektren auswirkt und die Bandenverhältnisse beeinflusst, lässt sich auch bei \chemical{Phe} und Trilaurin vermuten, aber weder zweifelsfrei zeigen noch mit den diskutierten Modellen erklären. 
        
        Abbildung~\ref{fig:results_AAP_spectra} zeigt einen Ausschnitt des Ramanspektrums von \chemical{4-AAP}. Die Anisotropie von Kristallen gegenüber Licht ist bekannt. Allerdings zeigt sogar das Gemisch aus kleinen zufällig orientierten \chemical{4-AAP}-Kristallen eine Polarisationsabhängigkeit. Die Bandenhöhe bei \SIlist{1240;1375;1520;1570;1620}{\per\centi\meter} variiert mit der Rotation der Polarisationsebene. Wie für einen polarisationsbedingten Effekt erwartet, liefert eine Rotation der Polarisationsebene um \SI{180}{\degree} das gleiche Spektrum wie die Rotation um \SI{0}{\degree}. Es kann nicht ausgeschlossen werden, dass die Kristalle unzureichend zerkleinert wurden. Der beobachtete Effekt wäre dann alleine von der Anisotropie der Kristallstruktur bedingt und nicht von dem vermuteten Einfluss der Schwingungsmoden auf die Polarisation des Streulichts.
        
        Für \chemical{4-AAP} und \ce{CCl4} konnte eine Polarisationsabhängigkeit in den Ramanspektren beobachtet werden. Obgleich die Ursache durch das verwendete Modell alleine nicht erklärt werden kann, wurde gezeigt, dass die Polarisation des Anregungslasers die Ramanspektren beeinflussen kann. Der Ausmaß dieses Einflusses ist dabei stoff- und gerätespezifisch. Für \chemical{4-AAP} ist der Effekt allerdings vernachlässigbar klein. 
 
\end{document}
